

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Oct 14 20:29:13 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 07/09/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1783 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0008                     bsr             equ	8
    75     0005                     fsr0h           equ	5
    76     0004                     fsr0l           equ	4
    77     0007                     fsr1h           equ	7
    78     0006                     fsr1l           equ	6
    79     0000                     indf            equ	0
    80     0000                     indf0           equ	0
    81     0001                     indf1           equ	1
    82     000B                     intcon          equ	11
    83     0002                     pc              equ	2
    84     0002                     pcl             equ	2
    85     000A                     pclath          equ	10
    86     0003                     status          equ	3
    87     0009                     wreg            equ	9
    88     0000                     INDF0           equ	0	;# 
    89     0001                     INDF1           equ	1	;# 
    90     0002                     PCL             equ	2	;# 
    91     0003                     STATUS          equ	3	;# 
    92     0004                     FSR0L           equ	4	;# 
    93     0005                     FSR0H           equ	5	;# 
    94     0006                     FSR1L           equ	6	;# 
    95     0007                     FSR1H           equ	7	;# 
    96     0008                     BSR             equ	8	;# 
    97     0009                     WREG            equ	9	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PORTA           equ	12	;# 
   101     000D                     PORTB           equ	13	;# 
   102     000E                     PORTC           equ	14	;# 
   103     0010                     PORTE           equ	16	;# 
   104     0011                     PIR1            equ	17	;# 
   105     0012                     PIR2            equ	18	;# 
   106     0014                     PIR4            equ	20	;# 
   107     0015                     TMR0            equ	21	;# 
   108     0016                     TMR1            equ	22	;# 
   109     0016                     TMR1L           equ	22	;# 
   110     0017                     TMR1H           equ	23	;# 
   111     0018                     T1CON           equ	24	;# 
   112     0019                     T1GCON          equ	25	;# 
   113     001A                     TMR2            equ	26	;# 
   114     001B                     PR2             equ	27	;# 
   115     001C                     T2CON           equ	28	;# 
   116     008C                     TRISA           equ	140	;# 
   117     008D                     TRISB           equ	141	;# 
   118     008E                     TRISC           equ	142	;# 
   119     0090                     TRISE           equ	144	;# 
   120     0091                     PIE1            equ	145	;# 
   121     0092                     PIE2            equ	146	;# 
   122     0094                     PIE4            equ	148	;# 
   123     0095                     OPTION_REG      equ	149	;# 
   124     0096                     PCON            equ	150	;# 
   125     0097                     WDTCON          equ	151	;# 
   126     0098                     OSCTUNE         equ	152	;# 
   127     0099                     OSCCON          equ	153	;# 
   128     009A                     OSCSTAT         equ	154	;# 
   129     009B                     ADRES           equ	155	;# 
   130     009B                     ADRESL          equ	155	;# 
   131     009C                     ADRESH          equ	156	;# 
   132     009D                     ADCON0          equ	157	;# 
   133     009E                     ADCON1          equ	158	;# 
   134     009F                     ADCON2          equ	159	;# 
   135     010C                     LATA            equ	268	;# 
   136     010D                     LATB            equ	269	;# 
   137     010E                     LATC            equ	270	;# 
   138     0111                     CM1CON0         equ	273	;# 
   139     0112                     CM1CON1         equ	274	;# 
   140     0113                     CM2CON0         equ	275	;# 
   141     0114                     CM2CON1         equ	276	;# 
   142     0115                     CMOUT           equ	277	;# 
   143     0116                     BORCON          equ	278	;# 
   144     0117                     FVRCON          equ	279	;# 
   145     0118                     DACCON0         equ	280	;# 
   146     0119                     DACCON1         equ	281	;# 
   147     011D                     APFCON          equ	285	;# 
   148     011D                     APFCON0         equ	285	;# 
   149     011E                     CM3CON0         equ	286	;# 
   150     011F                     CM3CON1         equ	287	;# 
   151     018C                     ANSELA          equ	396	;# 
   152     018D                     ANSELB          equ	397	;# 
   153     0191                     EEADR           equ	401	;# 
   154     0191                     EEADRL          equ	401	;# 
   155     0192                     EEADRH          equ	402	;# 
   156     0193                     EEDAT           equ	403	;# 
   157     0193                     EEDATL          equ	403	;# 
   158     0193                     EEDATA          equ	403	;# 
   159     0194                     EEDATH          equ	404	;# 
   160     0195                     EECON1          equ	405	;# 
   161     0196                     EECON2          equ	406	;# 
   162     0197                     VREGCON         equ	407	;# 
   163     0199                     RC1REG          equ	409	;# 
   164     0199                     RCREG           equ	409	;# 
   165     0199                     RCREG1          equ	409	;# 
   166     019A                     TX1REG          equ	410	;# 
   167     019A                     TXREG1          equ	410	;# 
   168     019A                     TXREG           equ	410	;# 
   169     019B                     SP1BRG          equ	411	;# 
   170     019B                     SPBRG           equ	411	;# 
   171     019B                     SP1BRGL         equ	411	;# 
   172     019B                     SPBRG1          equ	411	;# 
   173     019B                     SPBRGL          equ	411	;# 
   174     019C                     SP1BRGH         equ	412	;# 
   175     019C                     SPBRGH          equ	412	;# 
   176     019C                     SPBRGH1         equ	412	;# 
   177     019D                     RC1STA          equ	413	;# 
   178     019D                     RCSTA1          equ	413	;# 
   179     019D                     RCSTA           equ	413	;# 
   180     019E                     TX1STA          equ	414	;# 
   181     019E                     TXSTA1          equ	414	;# 
   182     019E                     TXSTA           equ	414	;# 
   183     019F                     BAUD1CON        equ	415	;# 
   184     019F                     BAUDCON1        equ	415	;# 
   185     019F                     BAUDCTL1        equ	415	;# 
   186     019F                     BAUDCON         equ	415	;# 
   187     019F                     BAUDCTL         equ	415	;# 
   188     020C                     WPUA            equ	524	;# 
   189     020D                     WPUB            equ	525	;# 
   190     020E                     WPUC            equ	526	;# 
   191     0210                     WPUE            equ	528	;# 
   192     0211                     SSPBUF          equ	529	;# 
   193     0211                     SSP1BUF         equ	529	;# 
   194     0212                     SSPADD          equ	530	;# 
   195     0212                     SSP1ADD         equ	530	;# 
   196     0213                     SSPMSK          equ	531	;# 
   197     0213                     SSP1MSK         equ	531	;# 
   198     0214                     SSPSTAT         equ	532	;# 
   199     0214                     SSP1STAT        equ	532	;# 
   200     0215                     SSPCON1         equ	533	;# 
   201     0215                     SSP1CON         equ	533	;# 
   202     0215                     SSPCON          equ	533	;# 
   203     0216                     SSPCON2         equ	534	;# 
   204     0216                     SSP1CON2        equ	534	;# 
   205     0217                     SSPCON3         equ	535	;# 
   206     0217                     SSP1CON3        equ	535	;# 
   207     028C                     ODCONA          equ	652	;# 
   208     028D                     ODCONB          equ	653	;# 
   209     028E                     ODCONC          equ	654	;# 
   210     0291                     CCPR1           equ	657	;# 
   211     0291                     CCPR1L          equ	657	;# 
   212     0292                     CCPR1H          equ	658	;# 
   213     0293                     CCP1CON         equ	659	;# 
   214     0298                     CCPR2           equ	664	;# 
   215     0298                     CCPR2L          equ	664	;# 
   216     0299                     CCPR2H          equ	665	;# 
   217     029A                     CCP2CON         equ	666	;# 
   218     030C                     SLRCONA         equ	780	;# 
   219     030D                     SLRCONB         equ	781	;# 
   220     030E                     SLRCONC         equ	782	;# 
   221     038C                     INLVLA          equ	908	;# 
   222     038D                     INLVLB          equ	909	;# 
   223     038E                     INLVLC          equ	910	;# 
   224     0390                     INLVLE          equ	912	;# 
   225     0391                     IOCAP           equ	913	;# 
   226     0392                     IOCAN           equ	914	;# 
   227     0393                     IOCAF           equ	915	;# 
   228     0394                     IOCBP           equ	916	;# 
   229     0395                     IOCBN           equ	917	;# 
   230     0396                     IOCBF           equ	918	;# 
   231     0397                     IOCCP           equ	919	;# 
   232     0398                     IOCCN           equ	920	;# 
   233     0399                     IOCCF           equ	921	;# 
   234     039D                     IOCEP           equ	925	;# 
   235     039E                     IOCEN           equ	926	;# 
   236     039F                     IOCEF           equ	927	;# 
   237     0511                     OPA1CON         equ	1297	;# 
   238     0513                     OPA2CON         equ	1299	;# 
   239     051A                     CLKRCON         equ	1306	;# 
   240     0811                     PSMC1CON        equ	2065	;# 
   241     0812                     PSMC1MDL        equ	2066	;# 
   242     0813                     PSMC1SYNC       equ	2067	;# 
   243     0814                     PSMC1CLK        equ	2068	;# 
   244     0815                     PSMC1OEN        equ	2069	;# 
   245     0816                     PSMC1POL        equ	2070	;# 
   246     0817                     PSMC1BLNK       equ	2071	;# 
   247     0818                     PSMC1REBS       equ	2072	;# 
   248     0819                     PSMC1FEBS       equ	2073	;# 
   249     081A                     PSMC1PHS        equ	2074	;# 
   250     081B                     PSMC1DCS        equ	2075	;# 
   251     081C                     PSMC1PRS        equ	2076	;# 
   252     081D                     PSMC1ASDC       equ	2077	;# 
   253     081E                     PSMC1ASDL       equ	2078	;# 
   254     081F                     PSMC1ASDS       equ	2079	;# 
   255     0820                     PSMC1INT        equ	2080	;# 
   256     0821                     PSMC1PH         equ	2081	;# 
   257     0821                     PSMC1PHL        equ	2081	;# 
   258     0822                     PSMC1PHH        equ	2082	;# 
   259     0823                     PSMC1DC         equ	2083	;# 
   260     0823                     PSMC1DCL        equ	2083	;# 
   261     0824                     PSMC1DCH        equ	2084	;# 
   262     0825                     PSMC1PR         equ	2085	;# 
   263     0825                     PSMC1PRL        equ	2085	;# 
   264     0826                     PSMC1PRH        equ	2086	;# 
   265     0827                     PSMC1TMR        equ	2087	;# 
   266     0827                     PSMC1TMRL       equ	2087	;# 
   267     0828                     PSMC1TMRH       equ	2088	;# 
   268     0829                     PSMC1DBR        equ	2089	;# 
   269     082A                     PSMC1DBF        equ	2090	;# 
   270     082B                     PSMC1BLKR       equ	2091	;# 
   271     082C                     PSMC1BLKF       equ	2092	;# 
   272     082D                     PSMC1FFA        equ	2093	;# 
   273     082E                     PSMC1STR0       equ	2094	;# 
   274     082F                     PSMC1STR1       equ	2095	;# 
   275     0831                     PSMC2CON        equ	2097	;# 
   276     0832                     PSMC2MDL        equ	2098	;# 
   277     0833                     PSMC2SYNC       equ	2099	;# 
   278     0834                     PSMC2CLK        equ	2100	;# 
   279     0835                     PSMC2OEN        equ	2101	;# 
   280     0836                     PSMC2POL        equ	2102	;# 
   281     0837                     PSMC2BLNK       equ	2103	;# 
   282     0838                     PSMC2REBS       equ	2104	;# 
   283     0839                     PSMC2FEBS       equ	2105	;# 
   284     083A                     PSMC2PHS        equ	2106	;# 
   285     083B                     PSMC2DCS        equ	2107	;# 
   286     083C                     PSMC2PRS        equ	2108	;# 
   287     083D                     PSMC2ASDC       equ	2109	;# 
   288     083E                     PSMC2ASDL       equ	2110	;# 
   289     083F                     PSMC2ASDS       equ	2111	;# 
   290     0840                     PSMC2INT        equ	2112	;# 
   291     0841                     PSMC2PH         equ	2113	;# 
   292     0841                     PSMC2PHL        equ	2113	;# 
   293     0842                     PSMC2PHH        equ	2114	;# 
   294     0843                     PSMC2DC         equ	2115	;# 
   295     0843                     PSMC2DCL        equ	2115	;# 
   296     0844                     PSMC2DCH        equ	2116	;# 
   297     0845                     PSMC2PR         equ	2117	;# 
   298     0845                     PSMC2PRL        equ	2117	;# 
   299     0846                     PSMC2PRH        equ	2118	;# 
   300     0847                     PSMC2TMR        equ	2119	;# 
   301     0847                     PSMC2TMRL       equ	2119	;# 
   302     0848                     PSMC2TMRH       equ	2120	;# 
   303     0849                     PSMC2DBR        equ	2121	;# 
   304     084A                     PSMC2DBF        equ	2122	;# 
   305     084B                     PSMC2BLKR       equ	2123	;# 
   306     084C                     PSMC2BLKF       equ	2124	;# 
   307     084D                     PSMC2FFA        equ	2125	;# 
   308     084E                     PSMC2STR0       equ	2126	;# 
   309     084F                     PSMC2STR1       equ	2127	;# 
   310     0FE4                     STATUS_SHAD     equ	4068	;# 
   311     0FE5                     WREG_SHAD       equ	4069	;# 
   312     0FE6                     BSR_SHAD        equ	4070	;# 
   313     0FE7                     PCLATH_SHAD     equ	4071	;# 
   314     0FE8                     FSR0L_SHAD      equ	4072	;# 
   315     0FE9                     FSR0H_SHAD      equ	4073	;# 
   316     0FEA                     FSR1L_SHAD      equ	4074	;# 
   317     0FEB                     FSR1H_SHAD      equ	4075	;# 
   318     0FED                     STKPTR          equ	4077	;# 
   319     0FEE                     TOSL            equ	4078	;# 
   320     0FEF                     TOSH            equ	4079	;# 
   321     0000                     INDF0           equ	0	;# 
   322     0001                     INDF1           equ	1	;# 
   323     0002                     PCL             equ	2	;# 
   324     0003                     STATUS          equ	3	;# 
   325     0004                     FSR0L           equ	4	;# 
   326     0005                     FSR0H           equ	5	;# 
   327     0006                     FSR1L           equ	6	;# 
   328     0007                     FSR1H           equ	7	;# 
   329     0008                     BSR             equ	8	;# 
   330     0009                     WREG            equ	9	;# 
   331     000A                     PCLATH          equ	10	;# 
   332     000B                     INTCON          equ	11	;# 
   333     000C                     PORTA           equ	12	;# 
   334     000D                     PORTB           equ	13	;# 
   335     000E                     PORTC           equ	14	;# 
   336     0010                     PORTE           equ	16	;# 
   337     0011                     PIR1            equ	17	;# 
   338     0012                     PIR2            equ	18	;# 
   339     0014                     PIR4            equ	20	;# 
   340     0015                     TMR0            equ	21	;# 
   341     0016                     TMR1            equ	22	;# 
   342     0016                     TMR1L           equ	22	;# 
   343     0017                     TMR1H           equ	23	;# 
   344     0018                     T1CON           equ	24	;# 
   345     0019                     T1GCON          equ	25	;# 
   346     001A                     TMR2            equ	26	;# 
   347     001B                     PR2             equ	27	;# 
   348     001C                     T2CON           equ	28	;# 
   349     008C                     TRISA           equ	140	;# 
   350     008D                     TRISB           equ	141	;# 
   351     008E                     TRISC           equ	142	;# 
   352     0090                     TRISE           equ	144	;# 
   353     0091                     PIE1            equ	145	;# 
   354     0092                     PIE2            equ	146	;# 
   355     0094                     PIE4            equ	148	;# 
   356     0095                     OPTION_REG      equ	149	;# 
   357     0096                     PCON            equ	150	;# 
   358     0097                     WDTCON          equ	151	;# 
   359     0098                     OSCTUNE         equ	152	;# 
   360     0099                     OSCCON          equ	153	;# 
   361     009A                     OSCSTAT         equ	154	;# 
   362     009B                     ADRES           equ	155	;# 
   363     009B                     ADRESL          equ	155	;# 
   364     009C                     ADRESH          equ	156	;# 
   365     009D                     ADCON0          equ	157	;# 
   366     009E                     ADCON1          equ	158	;# 
   367     009F                     ADCON2          equ	159	;# 
   368     010C                     LATA            equ	268	;# 
   369     010D                     LATB            equ	269	;# 
   370     010E                     LATC            equ	270	;# 
   371     0111                     CM1CON0         equ	273	;# 
   372     0112                     CM1CON1         equ	274	;# 
   373     0113                     CM2CON0         equ	275	;# 
   374     0114                     CM2CON1         equ	276	;# 
   375     0115                     CMOUT           equ	277	;# 
   376     0116                     BORCON          equ	278	;# 
   377     0117                     FVRCON          equ	279	;# 
   378     0118                     DACCON0         equ	280	;# 
   379     0119                     DACCON1         equ	281	;# 
   380     011D                     APFCON          equ	285	;# 
   381     011D                     APFCON0         equ	285	;# 
   382     011E                     CM3CON0         equ	286	;# 
   383     011F                     CM3CON1         equ	287	;# 
   384     018C                     ANSELA          equ	396	;# 
   385     018D                     ANSELB          equ	397	;# 
   386     0191                     EEADR           equ	401	;# 
   387     0191                     EEADRL          equ	401	;# 
   388     0192                     EEADRH          equ	402	;# 
   389     0193                     EEDAT           equ	403	;# 
   390     0193                     EEDATL          equ	403	;# 
   391     0193                     EEDATA          equ	403	;# 
   392     0194                     EEDATH          equ	404	;# 
   393     0195                     EECON1          equ	405	;# 
   394     0196                     EECON2          equ	406	;# 
   395     0197                     VREGCON         equ	407	;# 
   396     0199                     RC1REG          equ	409	;# 
   397     0199                     RCREG           equ	409	;# 
   398     0199                     RCREG1          equ	409	;# 
   399     019A                     TX1REG          equ	410	;# 
   400     019A                     TXREG1          equ	410	;# 
   401     019A                     TXREG           equ	410	;# 
   402     019B                     SP1BRG          equ	411	;# 
   403     019B                     SPBRG           equ	411	;# 
   404     019B                     SP1BRGL         equ	411	;# 
   405     019B                     SPBRG1          equ	411	;# 
   406     019B                     SPBRGL          equ	411	;# 
   407     019C                     SP1BRGH         equ	412	;# 
   408     019C                     SPBRGH          equ	412	;# 
   409     019C                     SPBRGH1         equ	412	;# 
   410     019D                     RC1STA          equ	413	;# 
   411     019D                     RCSTA1          equ	413	;# 
   412     019D                     RCSTA           equ	413	;# 
   413     019E                     TX1STA          equ	414	;# 
   414     019E                     TXSTA1          equ	414	;# 
   415     019E                     TXSTA           equ	414	;# 
   416     019F                     BAUD1CON        equ	415	;# 
   417     019F                     BAUDCON1        equ	415	;# 
   418     019F                     BAUDCTL1        equ	415	;# 
   419     019F                     BAUDCON         equ	415	;# 
   420     019F                     BAUDCTL         equ	415	;# 
   421     020C                     WPUA            equ	524	;# 
   422     020D                     WPUB            equ	525	;# 
   423     020E                     WPUC            equ	526	;# 
   424     0210                     WPUE            equ	528	;# 
   425     0211                     SSPBUF          equ	529	;# 
   426     0211                     SSP1BUF         equ	529	;# 
   427     0212                     SSPADD          equ	530	;# 
   428     0212                     SSP1ADD         equ	530	;# 
   429     0213                     SSPMSK          equ	531	;# 
   430     0213                     SSP1MSK         equ	531	;# 
   431     0214                     SSPSTAT         equ	532	;# 
   432     0214                     SSP1STAT        equ	532	;# 
   433     0215                     SSPCON1         equ	533	;# 
   434     0215                     SSP1CON         equ	533	;# 
   435     0215                     SSPCON          equ	533	;# 
   436     0216                     SSPCON2         equ	534	;# 
   437     0216                     SSP1CON2        equ	534	;# 
   438     0217                     SSPCON3         equ	535	;# 
   439     0217                     SSP1CON3        equ	535	;# 
   440     028C                     ODCONA          equ	652	;# 
   441     028D                     ODCONB          equ	653	;# 
   442     028E                     ODCONC          equ	654	;# 
   443     0291                     CCPR1           equ	657	;# 
   444     0291                     CCPR1L          equ	657	;# 
   445     0292                     CCPR1H          equ	658	;# 
   446     0293                     CCP1CON         equ	659	;# 
   447     0298                     CCPR2           equ	664	;# 
   448     0298                     CCPR2L          equ	664	;# 
   449     0299                     CCPR2H          equ	665	;# 
   450     029A                     CCP2CON         equ	666	;# 
   451     030C                     SLRCONA         equ	780	;# 
   452     030D                     SLRCONB         equ	781	;# 
   453     030E                     SLRCONC         equ	782	;# 
   454     038C                     INLVLA          equ	908	;# 
   455     038D                     INLVLB          equ	909	;# 
   456     038E                     INLVLC          equ	910	;# 
   457     0390                     INLVLE          equ	912	;# 
   458     0391                     IOCAP           equ	913	;# 
   459     0392                     IOCAN           equ	914	;# 
   460     0393                     IOCAF           equ	915	;# 
   461     0394                     IOCBP           equ	916	;# 
   462     0395                     IOCBN           equ	917	;# 
   463     0396                     IOCBF           equ	918	;# 
   464     0397                     IOCCP           equ	919	;# 
   465     0398                     IOCCN           equ	920	;# 
   466     0399                     IOCCF           equ	921	;# 
   467     039D                     IOCEP           equ	925	;# 
   468     039E                     IOCEN           equ	926	;# 
   469     039F                     IOCEF           equ	927	;# 
   470     0511                     OPA1CON         equ	1297	;# 
   471     0513                     OPA2CON         equ	1299	;# 
   472     051A                     CLKRCON         equ	1306	;# 
   473     0811                     PSMC1CON        equ	2065	;# 
   474     0812                     PSMC1MDL        equ	2066	;# 
   475     0813                     PSMC1SYNC       equ	2067	;# 
   476     0814                     PSMC1CLK        equ	2068	;# 
   477     0815                     PSMC1OEN        equ	2069	;# 
   478     0816                     PSMC1POL        equ	2070	;# 
   479     0817                     PSMC1BLNK       equ	2071	;# 
   480     0818                     PSMC1REBS       equ	2072	;# 
   481     0819                     PSMC1FEBS       equ	2073	;# 
   482     081A                     PSMC1PHS        equ	2074	;# 
   483     081B                     PSMC1DCS        equ	2075	;# 
   484     081C                     PSMC1PRS        equ	2076	;# 
   485     081D                     PSMC1ASDC       equ	2077	;# 
   486     081E                     PSMC1ASDL       equ	2078	;# 
   487     081F                     PSMC1ASDS       equ	2079	;# 
   488     0820                     PSMC1INT        equ	2080	;# 
   489     0821                     PSMC1PH         equ	2081	;# 
   490     0821                     PSMC1PHL        equ	2081	;# 
   491     0822                     PSMC1PHH        equ	2082	;# 
   492     0823                     PSMC1DC         equ	2083	;# 
   493     0823                     PSMC1DCL        equ	2083	;# 
   494     0824                     PSMC1DCH        equ	2084	;# 
   495     0825                     PSMC1PR         equ	2085	;# 
   496     0825                     PSMC1PRL        equ	2085	;# 
   497     0826                     PSMC1PRH        equ	2086	;# 
   498     0827                     PSMC1TMR        equ	2087	;# 
   499     0827                     PSMC1TMRL       equ	2087	;# 
   500     0828                     PSMC1TMRH       equ	2088	;# 
   501     0829                     PSMC1DBR        equ	2089	;# 
   502     082A                     PSMC1DBF        equ	2090	;# 
   503     082B                     PSMC1BLKR       equ	2091	;# 
   504     082C                     PSMC1BLKF       equ	2092	;# 
   505     082D                     PSMC1FFA        equ	2093	;# 
   506     082E                     PSMC1STR0       equ	2094	;# 
   507     082F                     PSMC1STR1       equ	2095	;# 
   508     0831                     PSMC2CON        equ	2097	;# 
   509     0832                     PSMC2MDL        equ	2098	;# 
   510     0833                     PSMC2SYNC       equ	2099	;# 
   511     0834                     PSMC2CLK        equ	2100	;# 
   512     0835                     PSMC2OEN        equ	2101	;# 
   513     0836                     PSMC2POL        equ	2102	;# 
   514     0837                     PSMC2BLNK       equ	2103	;# 
   515     0838                     PSMC2REBS       equ	2104	;# 
   516     0839                     PSMC2FEBS       equ	2105	;# 
   517     083A                     PSMC2PHS        equ	2106	;# 
   518     083B                     PSMC2DCS        equ	2107	;# 
   519     083C                     PSMC2PRS        equ	2108	;# 
   520     083D                     PSMC2ASDC       equ	2109	;# 
   521     083E                     PSMC2ASDL       equ	2110	;# 
   522     083F                     PSMC2ASDS       equ	2111	;# 
   523     0840                     PSMC2INT        equ	2112	;# 
   524     0841                     PSMC2PH         equ	2113	;# 
   525     0841                     PSMC2PHL        equ	2113	;# 
   526     0842                     PSMC2PHH        equ	2114	;# 
   527     0843                     PSMC2DC         equ	2115	;# 
   528     0843                     PSMC2DCL        equ	2115	;# 
   529     0844                     PSMC2DCH        equ	2116	;# 
   530     0845                     PSMC2PR         equ	2117	;# 
   531     0845                     PSMC2PRL        equ	2117	;# 
   532     0846                     PSMC2PRH        equ	2118	;# 
   533     0847                     PSMC2TMR        equ	2119	;# 
   534     0847                     PSMC2TMRL       equ	2119	;# 
   535     0848                     PSMC2TMRH       equ	2120	;# 
   536     0849                     PSMC2DBR        equ	2121	;# 
   537     084A                     PSMC2DBF        equ	2122	;# 
   538     084B                     PSMC2BLKR       equ	2123	;# 
   539     084C                     PSMC2BLKF       equ	2124	;# 
   540     084D                     PSMC2FFA        equ	2125	;# 
   541     084E                     PSMC2STR0       equ	2126	;# 
   542     084F                     PSMC2STR1       equ	2127	;# 
   543     0FE4                     STATUS_SHAD     equ	4068	;# 
   544     0FE5                     WREG_SHAD       equ	4069	;# 
   545     0FE6                     BSR_SHAD        equ	4070	;# 
   546     0FE7                     PCLATH_SHAD     equ	4071	;# 
   547     0FE8                     FSR0L_SHAD      equ	4072	;# 
   548     0FE9                     FSR0H_SHAD      equ	4073	;# 
   549     0FEA                     FSR1L_SHAD      equ	4074	;# 
   550     0FEB                     FSR1H_SHAD      equ	4075	;# 
   551     0FED                     STKPTR          equ	4077	;# 
   552     0FEE                     TOSL            equ	4078	;# 
   553     0FEF                     TOSH            equ	4079	;# 
   554     0000                     INDF0           equ	0	;# 
   555     0001                     INDF1           equ	1	;# 
   556     0002                     PCL             equ	2	;# 
   557     0003                     STATUS          equ	3	;# 
   558     0004                     FSR0L           equ	4	;# 
   559     0005                     FSR0H           equ	5	;# 
   560     0006                     FSR1L           equ	6	;# 
   561     0007                     FSR1H           equ	7	;# 
   562     0008                     BSR             equ	8	;# 
   563     0009                     WREG            equ	9	;# 
   564     000A                     PCLATH          equ	10	;# 
   565     000B                     INTCON          equ	11	;# 
   566     000C                     PORTA           equ	12	;# 
   567     000D                     PORTB           equ	13	;# 
   568     000E                     PORTC           equ	14	;# 
   569     0010                     PORTE           equ	16	;# 
   570     0011                     PIR1            equ	17	;# 
   571     0012                     PIR2            equ	18	;# 
   572     0014                     PIR4            equ	20	;# 
   573     0015                     TMR0            equ	21	;# 
   574     0016                     TMR1            equ	22	;# 
   575     0016                     TMR1L           equ	22	;# 
   576     0017                     TMR1H           equ	23	;# 
   577     0018                     T1CON           equ	24	;# 
   578     0019                     T1GCON          equ	25	;# 
   579     001A                     TMR2            equ	26	;# 
   580     001B                     PR2             equ	27	;# 
   581     001C                     T2CON           equ	28	;# 
   582     008C                     TRISA           equ	140	;# 
   583     008D                     TRISB           equ	141	;# 
   584     008E                     TRISC           equ	142	;# 
   585     0090                     TRISE           equ	144	;# 
   586     0091                     PIE1            equ	145	;# 
   587     0092                     PIE2            equ	146	;# 
   588     0094                     PIE4            equ	148	;# 
   589     0095                     OPTION_REG      equ	149	;# 
   590     0096                     PCON            equ	150	;# 
   591     0097                     WDTCON          equ	151	;# 
   592     0098                     OSCTUNE         equ	152	;# 
   593     0099                     OSCCON          equ	153	;# 
   594     009A                     OSCSTAT         equ	154	;# 
   595     009B                     ADRES           equ	155	;# 
   596     009B                     ADRESL          equ	155	;# 
   597     009C                     ADRESH          equ	156	;# 
   598     009D                     ADCON0          equ	157	;# 
   599     009E                     ADCON1          equ	158	;# 
   600     009F                     ADCON2          equ	159	;# 
   601     010C                     LATA            equ	268	;# 
   602     010D                     LATB            equ	269	;# 
   603     010E                     LATC            equ	270	;# 
   604     0111                     CM1CON0         equ	273	;# 
   605     0112                     CM1CON1         equ	274	;# 
   606     0113                     CM2CON0         equ	275	;# 
   607     0114                     CM2CON1         equ	276	;# 
   608     0115                     CMOUT           equ	277	;# 
   609     0116                     BORCON          equ	278	;# 
   610     0117                     FVRCON          equ	279	;# 
   611     0118                     DACCON0         equ	280	;# 
   612     0119                     DACCON1         equ	281	;# 
   613     011D                     APFCON          equ	285	;# 
   614     011D                     APFCON0         equ	285	;# 
   615     011E                     CM3CON0         equ	286	;# 
   616     011F                     CM3CON1         equ	287	;# 
   617     018C                     ANSELA          equ	396	;# 
   618     018D                     ANSELB          equ	397	;# 
   619     0191                     EEADR           equ	401	;# 
   620     0191                     EEADRL          equ	401	;# 
   621     0192                     EEADRH          equ	402	;# 
   622     0193                     EEDAT           equ	403	;# 
   623     0193                     EEDATL          equ	403	;# 
   624     0193                     EEDATA          equ	403	;# 
   625     0194                     EEDATH          equ	404	;# 
   626     0195                     EECON1          equ	405	;# 
   627     0196                     EECON2          equ	406	;# 
   628     0197                     VREGCON         equ	407	;# 
   629     0199                     RC1REG          equ	409	;# 
   630     0199                     RCREG           equ	409	;# 
   631     0199                     RCREG1          equ	409	;# 
   632     019A                     TX1REG          equ	410	;# 
   633     019A                     TXREG1          equ	410	;# 
   634     019A                     TXREG           equ	410	;# 
   635     019B                     SP1BRG          equ	411	;# 
   636     019B                     SPBRG           equ	411	;# 
   637     019B                     SP1BRGL         equ	411	;# 
   638     019B                     SPBRG1          equ	411	;# 
   639     019B                     SPBRGL          equ	411	;# 
   640     019C                     SP1BRGH         equ	412	;# 
   641     019C                     SPBRGH          equ	412	;# 
   642     019C                     SPBRGH1         equ	412	;# 
   643     019D                     RC1STA          equ	413	;# 
   644     019D                     RCSTA1          equ	413	;# 
   645     019D                     RCSTA           equ	413	;# 
   646     019E                     TX1STA          equ	414	;# 
   647     019E                     TXSTA1          equ	414	;# 
   648     019E                     TXSTA           equ	414	;# 
   649     019F                     BAUD1CON        equ	415	;# 
   650     019F                     BAUDCON1        equ	415	;# 
   651     019F                     BAUDCTL1        equ	415	;# 
   652     019F                     BAUDCON         equ	415	;# 
   653     019F                     BAUDCTL         equ	415	;# 
   654     020C                     WPUA            equ	524	;# 
   655     020D                     WPUB            equ	525	;# 
   656     020E                     WPUC            equ	526	;# 
   657     0210                     WPUE            equ	528	;# 
   658     0211                     SSPBUF          equ	529	;# 
   659     0211                     SSP1BUF         equ	529	;# 
   660     0212                     SSPADD          equ	530	;# 
   661     0212                     SSP1ADD         equ	530	;# 
   662     0213                     SSPMSK          equ	531	;# 
   663     0213                     SSP1MSK         equ	531	;# 
   664     0214                     SSPSTAT         equ	532	;# 
   665     0214                     SSP1STAT        equ	532	;# 
   666     0215                     SSPCON1         equ	533	;# 
   667     0215                     SSP1CON         equ	533	;# 
   668     0215                     SSPCON          equ	533	;# 
   669     0216                     SSPCON2         equ	534	;# 
   670     0216                     SSP1CON2        equ	534	;# 
   671     0217                     SSPCON3         equ	535	;# 
   672     0217                     SSP1CON3        equ	535	;# 
   673     028C                     ODCONA          equ	652	;# 
   674     028D                     ODCONB          equ	653	;# 
   675     028E                     ODCONC          equ	654	;# 
   676     0291                     CCPR1           equ	657	;# 
   677     0291                     CCPR1L          equ	657	;# 
   678     0292                     CCPR1H          equ	658	;# 
   679     0293                     CCP1CON         equ	659	;# 
   680     0298                     CCPR2           equ	664	;# 
   681     0298                     CCPR2L          equ	664	;# 
   682     0299                     CCPR2H          equ	665	;# 
   683     029A                     CCP2CON         equ	666	;# 
   684     030C                     SLRCONA         equ	780	;# 
   685     030D                     SLRCONB         equ	781	;# 
   686     030E                     SLRCONC         equ	782	;# 
   687     038C                     INLVLA          equ	908	;# 
   688     038D                     INLVLB          equ	909	;# 
   689     038E                     INLVLC          equ	910	;# 
   690     0390                     INLVLE          equ	912	;# 
   691     0391                     IOCAP           equ	913	;# 
   692     0392                     IOCAN           equ	914	;# 
   693     0393                     IOCAF           equ	915	;# 
   694     0394                     IOCBP           equ	916	;# 
   695     0395                     IOCBN           equ	917	;# 
   696     0396                     IOCBF           equ	918	;# 
   697     0397                     IOCCP           equ	919	;# 
   698     0398                     IOCCN           equ	920	;# 
   699     0399                     IOCCF           equ	921	;# 
   700     039D                     IOCEP           equ	925	;# 
   701     039E                     IOCEN           equ	926	;# 
   702     039F                     IOCEF           equ	927	;# 
   703     0511                     OPA1CON         equ	1297	;# 
   704     0513                     OPA2CON         equ	1299	;# 
   705     051A                     CLKRCON         equ	1306	;# 
   706     0811                     PSMC1CON        equ	2065	;# 
   707     0812                     PSMC1MDL        equ	2066	;# 
   708     0813                     PSMC1SYNC       equ	2067	;# 
   709     0814                     PSMC1CLK        equ	2068	;# 
   710     0815                     PSMC1OEN        equ	2069	;# 
   711     0816                     PSMC1POL        equ	2070	;# 
   712     0817                     PSMC1BLNK       equ	2071	;# 
   713     0818                     PSMC1REBS       equ	2072	;# 
   714     0819                     PSMC1FEBS       equ	2073	;# 
   715     081A                     PSMC1PHS        equ	2074	;# 
   716     081B                     PSMC1DCS        equ	2075	;# 
   717     081C                     PSMC1PRS        equ	2076	;# 
   718     081D                     PSMC1ASDC       equ	2077	;# 
   719     081E                     PSMC1ASDL       equ	2078	;# 
   720     081F                     PSMC1ASDS       equ	2079	;# 
   721     0820                     PSMC1INT        equ	2080	;# 
   722     0821                     PSMC1PH         equ	2081	;# 
   723     0821                     PSMC1PHL        equ	2081	;# 
   724     0822                     PSMC1PHH        equ	2082	;# 
   725     0823                     PSMC1DC         equ	2083	;# 
   726     0823                     PSMC1DCL        equ	2083	;# 
   727     0824                     PSMC1DCH        equ	2084	;# 
   728     0825                     PSMC1PR         equ	2085	;# 
   729     0825                     PSMC1PRL        equ	2085	;# 
   730     0826                     PSMC1PRH        equ	2086	;# 
   731     0827                     PSMC1TMR        equ	2087	;# 
   732     0827                     PSMC1TMRL       equ	2087	;# 
   733     0828                     PSMC1TMRH       equ	2088	;# 
   734     0829                     PSMC1DBR        equ	2089	;# 
   735     082A                     PSMC1DBF        equ	2090	;# 
   736     082B                     PSMC1BLKR       equ	2091	;# 
   737     082C                     PSMC1BLKF       equ	2092	;# 
   738     082D                     PSMC1FFA        equ	2093	;# 
   739     082E                     PSMC1STR0       equ	2094	;# 
   740     082F                     PSMC1STR1       equ	2095	;# 
   741     0831                     PSMC2CON        equ	2097	;# 
   742     0832                     PSMC2MDL        equ	2098	;# 
   743     0833                     PSMC2SYNC       equ	2099	;# 
   744     0834                     PSMC2CLK        equ	2100	;# 
   745     0835                     PSMC2OEN        equ	2101	;# 
   746     0836                     PSMC2POL        equ	2102	;# 
   747     0837                     PSMC2BLNK       equ	2103	;# 
   748     0838                     PSMC2REBS       equ	2104	;# 
   749     0839                     PSMC2FEBS       equ	2105	;# 
   750     083A                     PSMC2PHS        equ	2106	;# 
   751     083B                     PSMC2DCS        equ	2107	;# 
   752     083C                     PSMC2PRS        equ	2108	;# 
   753     083D                     PSMC2ASDC       equ	2109	;# 
   754     083E                     PSMC2ASDL       equ	2110	;# 
   755     083F                     PSMC2ASDS       equ	2111	;# 
   756     0840                     PSMC2INT        equ	2112	;# 
   757     0841                     PSMC2PH         equ	2113	;# 
   758     0841                     PSMC2PHL        equ	2113	;# 
   759     0842                     PSMC2PHH        equ	2114	;# 
   760     0843                     PSMC2DC         equ	2115	;# 
   761     0843                     PSMC2DCL        equ	2115	;# 
   762     0844                     PSMC2DCH        equ	2116	;# 
   763     0845                     PSMC2PR         equ	2117	;# 
   764     0845                     PSMC2PRL        equ	2117	;# 
   765     0846                     PSMC2PRH        equ	2118	;# 
   766     0847                     PSMC2TMR        equ	2119	;# 
   767     0847                     PSMC2TMRL       equ	2119	;# 
   768     0848                     PSMC2TMRH       equ	2120	;# 
   769     0849                     PSMC2DBR        equ	2121	;# 
   770     084A                     PSMC2DBF        equ	2122	;# 
   771     084B                     PSMC2BLKR       equ	2123	;# 
   772     084C                     PSMC2BLKF       equ	2124	;# 
   773     084D                     PSMC2FFA        equ	2125	;# 
   774     084E                     PSMC2STR0       equ	2126	;# 
   775     084F                     PSMC2STR1       equ	2127	;# 
   776     0FE4                     STATUS_SHAD     equ	4068	;# 
   777     0FE5                     WREG_SHAD       equ	4069	;# 
   778     0FE6                     BSR_SHAD        equ	4070	;# 
   779     0FE7                     PCLATH_SHAD     equ	4071	;# 
   780     0FE8                     FSR0L_SHAD      equ	4072	;# 
   781     0FE9                     FSR0H_SHAD      equ	4073	;# 
   782     0FEA                     FSR1L_SHAD      equ	4074	;# 
   783     0FEB                     FSR1H_SHAD      equ	4075	;# 
   784     0FED                     STKPTR          equ	4077	;# 
   785     0FEE                     TOSL            equ	4078	;# 
   786     0FEF                     TOSH            equ	4079	;# 
   787     000C                     _PORTAbits      set	12
   788     008C                     _TRISAbits      set	140
   789     008E                     _TRISCbits      set	142
   790     008D                     _TRISBbits      set	141
   791     010E                     _LATCbits       set	270
   792     010D                     _LATBbits       set	269
   793     018C                     _ANSELAbits     set	396
   794     018D                     _ANSELBbits     set	397
   795     0823                     _PSMC1DCL       set	2083
   796     0824                     _PSMC1DCH       set	2084
   797     0825                     _PSMC1PRL       set	2085
   798     0826                     _PSMC1PRH       set	2086
   799     0821                     _PSMC1PHL       set	2081
   800     0822                     _PSMC1PHH       set	2082
   801     082E                     _PSMC1STR0bits  set	2094
   802     081C                     _PSMC1PRSbits   set	2076
   803     081B                     _PSMC1DCSbits   set	2075
   804     081A                     _PSMC1PHSbits   set	2074
   805     0816                     _PSMC1POLbits   set	2070
   806     0815                     _PSMC1OENbits   set	2069
   807     0814                     _PSMC1CLKbits   set	2068
   808     0811                     _PSMC1CONbits   set	2065
   809                           
   810                           	psect	stringtext1
   811     0800                     __pstringtext1:
   812     0800                     STR_1:
   813     0800  3450               	retlw	80	;'P'
   814     0801  3457               	retlw	87	;'W'
   815     0802  344D               	retlw	77	;'M'
   816     0803  3420               	retlw	32	;' '
   817     0804  344D               	retlw	77	;'M'
   818     0805  346F               	retlw	111	;'o'
   819     0806  3474               	retlw	116	;'t'
   820     0807  346F               	retlw	111	;'o'
   821     0808  3472               	retlw	114	;'r'
   822     0809  3420               	retlw	32	;' '
   823     080A  3453               	retlw	83	;'S'
   824     080B  3470               	retlw	112	;'p'
   825     080C  3465               	retlw	101	;'e'
   826     080D  3465               	retlw	101	;'e'
   827     080E  3464               	retlw	100	;'d'
   828     080F  3400               	retlw	0
   829                           
   830                           	psect	stringtext2
   831     0810                     __pstringtext2:
   832     0810                     STR_3:
   833     0810  3420               	retlw	32	;' '
   834     0811  3420               	retlw	32	;' '
   835     0812  3420               	retlw	32	;' '
   836     0813  3420               	retlw	32	;' '
   837     0814  3420               	retlw	32	;' '
   838     0815  3400               	retlw	0
   839                           
   840                           	psect	stringtext3
   841     0816                     __pstringtext3:
   842     0816                     STR_2:
   843     0816  3455               	retlw	85	;'U'
   844     0817  3470               	retlw	112	;'p'
   845     0818  3420               	retlw	32	;' '
   846     0819  3420               	retlw	32	;' '
   847     081A  3420               	retlw	32	;' '
   848     081B  3400               	retlw	0
   849                           
   850                           	psect	stringtext4
   851     081C                     __pstringtext4:
   852     081C                     STR_4:
   853     081C  3444               	retlw	68	;'D'
   854     081D  346F               	retlw	111	;'o'
   855     081E  3477               	retlw	119	;'w'
   856     081F  346E               	retlw	110	;'n'
   857     0820  3420               	retlw	32	;' '
   858     0821  3400               	retlw	0
   859                           
   860                           	psect	stringtext5
   861     0822                     __pstringtext5:
   862     0822                     STR_6:
   863     0822  344C               	retlw	76	;'L'
   864     0823  3465               	retlw	101	;'e'
   865     0824  3466               	retlw	102	;'f'
   866     0825  3474               	retlw	116	;'t'
   867     0826  3420               	retlw	32	;' '
   868     0827  3400               	retlw	0
   869                           
   870                           	psect	stringtext6
   871     0828                     __pstringtext6:
   872     0828                     STR_8:
   873     0828  3452               	retlw	82	;'R'
   874     0829  3469               	retlw	105	;'i'
   875     082A  3467               	retlw	103	;'g'
   876     082B  3468               	retlw	104	;'h'
   877     082C  3474               	retlw	116	;'t'
   878     082D  3400               	retlw	0
   879                           
   880                           	psect	stringtext7
   881     0000                     __pstringtext7:
   882     0810                     STR_5           equ	STR_3
   883     0810                     STR_7           equ	STR_3
   884     0810                     STR_9           equ	STR_3
   885                           
   886                           	psect	cinit
   887     07FD                     start_initialization:	
   888                           ; #config settings
   889                           
   890     07FD                     __initialization:
   891     07FD                     end_of_initialization:	
   892                           ;End of C runtime variable initialization code
   893                           
   894     07FD                     __end_of__initialization:
   895     07FD  0020               	movlb	0
   896     07FE  3183  2BC9         	ljmp	_main	;jump to C main() function
   897                           
   898                           	psect	cstackCOMMON
   899     0070                     __pcstackCOMMON:
   900     0070                     ?_programInitialize:
   901     0070                     ?_programLoop:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ?_lcd_Initialize:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?_motor_Initialize:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?_motor_SetSpeed:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ?_pb_DelayDebounce:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     ?_memset:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     ?_main:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     ?_delay_x1o5us:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_lcd_DelaySetupTime:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_lcd_DelayPulse:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_lcd_EPulse:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_lcd_WriteData:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_lcd_PrintCmd:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_lcd_PrintChar:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?___bmul:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ?_labs:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?___aldiv:	
   950                           ; 4 bytes @ 0x0
   951                           
   952     0070                     delay_x1o5us@delay:	
   953                           ; 4 bytes @ 0x0
   954                           
   955     0070                     ___bmul@multiplicand:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     memset@dest:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     motor_SetSpeed@pwm:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ___aldiv@divisor:	
   965                           ; 2 bytes @ 0x0
   966                           
   967     0070                     labs@a:	
   968                           ; 4 bytes @ 0x0
   969                           
   970     0070                     ??_motor_Initialize:	
   971                           ; 4 bytes @ 0x0
   972                           
   973     0070                     ??_delay_x1o5us:	
   974                           ; 1 bytes @ 0x0
   975                           
   976                           
   977                           ; 1 bytes @ 0x0
   978     0070                     	ds	1
   979     0071                     delay_x1o5us@i:
   980     0071                     ___bmul@product:	
   981                           ; 1 bytes @ 0x1
   982                           
   983     0071                     memset@c:	
   984                           ; 1 bytes @ 0x1
   985                           
   986     0071                     ??___bmul:	
   987                           ; 2 bytes @ 0x1
   988                           
   989                           
   990                           ; 1 bytes @ 0x1
   991     0071                     	ds	1
   992     0072                     ?_delay_x24o25us:
   993     0072                     ___bmul@multiplier:	
   994                           ; 1 bytes @ 0x2
   995                           
   996     0072                     delay_x24o25us@delay:	
   997                           ; 1 bytes @ 0x2
   998                           
   999     0072                     ??_motor_SetSpeed:	
  1000                           ; 2 bytes @ 0x2
  1001                           
  1002     0072                     ??_lcd_DelaySetupTime:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005     0072                     ??_lcd_DelayPulse:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008     0072                     ??_lcd_EPulse:	
  1009                           ; 1 bytes @ 0x2
  1010                           
  1011     0072                     ??_lcd_WriteData:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016     0072                     	ds	1
  1017     0073                     memset@n:
  1018                           
  1019                           ; 2 bytes @ 0x3
  1020     0073                     	ds	1
  1021     0074                     lcd_WriteData@data:
  1022     0074                     delay_x24o25us@i:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025     0074                     ___aldiv@dividend:	
  1026                           ; 2 bytes @ 0x4
  1027                           
  1028     0074                     ??_labs:	
  1029                           ; 4 bytes @ 0x4
  1030                           
  1031     0074                     ??_delay_x24o25us:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x4
  1036     0074                     	ds	1
  1037     0075                     lcd_PrintCmd@command:
  1038     0075                     lcd_PrintChar@character:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041     0075                     memset@p:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044     0075                     ??_memset:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047     0075                     ??_lcd_PrintCmd:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050     0075                     ??_lcd_PrintChar:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x5
  1055     0075                     	ds	1
  1056     0076                     ?_delay_ms:
  1057     0076                     ?_lcd_Goto:	
  1058                           ; 1 bytes @ 0x6
  1059                           
  1060     0076                     ?_lcd_PrintString:	
  1061                           ; 1 bytes @ 0x6
  1062                           
  1063     0076                     lcd_Goto@x:	
  1064                           ; 1 bytes @ 0x6
  1065                           
  1066     0076                     lcd_PrintString@string:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069     0076                     delay_ms@delay:	
  1070                           ; 2 bytes @ 0x6
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0x6
  1074     0076                     	ds	1
  1075     0077                     lcd_Goto@y:
  1076     0077                     ??_lcd_Goto:	
  1077                           ; 1 bytes @ 0x7
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081     0077                     	ds	1
  1082     0078                     ___aldiv@counter:
  1083     0078                     ??_lcd_PrintString:	
  1084                           ; 1 bytes @ 0x8
  1085                           
  1086     0078                     ??___aldiv:	
  1087                           ; 1 bytes @ 0x8
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x8
  1091     0078                     	ds	1
  1092     0079                     ___aldiv@sign:
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095     0079                     	ds	1
  1096     007A                     delay_ms@i:
  1097     007A                     ___aldiv@quotient:	
  1098                           ; 4 bytes @ 0xA
  1099                           
  1100     007A                     ??_delay_ms:	
  1101                           ; 4 bytes @ 0xA
  1102                           
  1103                           
  1104                           ; 1 bytes @ 0xA
  1105     007A                     	ds	4
  1106     007E                     ??_programInitialize:
  1107     007E                     ??_lcd_Initialize:	
  1108                           ; 1 bytes @ 0xE
  1109                           
  1110     007E                     ??_pb_DelayDebounce:	
  1111                           ; 1 bytes @ 0xE
  1112                           
  1113     007E                     ??_main:	
  1114                           ; 1 bytes @ 0xE
  1115                           
  1116                           
  1117                           	psect	cstackBANK0
  1118     0020                     __pcstackBANK0:	
  1119                           ; 1 bytes @ 0xE
  1120                           
  1121     0020                     ?_lcd_PrintDigitInt32:
  1122     0020                     lcd_PrintDigitInt32@number:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x0
  1127     0020                     	ds	4
  1128     0024                     lcd_PrintDigitInt32@noDigit:
  1129                           
  1130                           ; 1 bytes @ 0x4
  1131     0024                     	ds	1
  1132     0025                     lcd_PrintDigitInt32@enSign:
  1133                           
  1134                           ; 1 bytes @ 0x5
  1135     0025                     	ds	1
  1136     0026                     lcd_PrintDigitInt32@enZero:
  1137                           
  1138                           ; 1 bytes @ 0x6
  1139     0026                     	ds	1
  1140     0027                     ??_lcd_PrintDigitInt32:
  1141                           
  1142                           ; 1 bytes @ 0x7
  1143     0027                     	ds	4
  1144     002B                     lcd_PrintDigitInt32@numberRevChar:
  1145                           
  1146                           ; 11 bytes @ 0xB
  1147     002B                     	ds	11
  1148     0036                     lcd_PrintDigitInt32@numberChar:
  1149                           
  1150                           ; 11 bytes @ 0x16
  1151     0036                     	ds	11
  1152     0041                     lcd_PrintDigitInt32@tempN:
  1153                           
  1154                           ; 4 bytes @ 0x21
  1155     0041                     	ds	4
  1156     0045                     lcd_PrintDigitInt32@tempC:
  1157                           
  1158                           ; 1 bytes @ 0x25
  1159     0045                     	ds	1
  1160     0046                     lcd_PrintDigitInt32@i2:
  1161                           
  1162                           ; 1 bytes @ 0x26
  1163     0046                     	ds	1
  1164     0047                     lcd_PrintDigitInt32@totalDigit:
  1165                           
  1166                           ; 1 bytes @ 0x27
  1167     0047                     	ds	1
  1168     0048                     lcd_PrintDigitInt32@i1:
  1169                           
  1170                           ; 1 bytes @ 0x28
  1171     0048                     	ds	1
  1172     0049                     ??_programLoop:
  1173                           
  1174                           ; 1 bytes @ 0x29
  1175     0049                     	ds	4
  1176     004D                     programLoop@motorSpeed:
  1177                           
  1178                           ; 4 bytes @ 0x2D
  1179     004D                     	ds	4
  1180                           
  1181                           	psect	maintext
  1182     03C9                     __pmaintext:	
  1183 ;;
  1184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1185 ;;
  1186 ;; *************** function _main *****************
  1187 ;; Defined at:
  1188 ;;		line 26 in file "main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : B1F/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1202 ;;      Params:         0       0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels required when called: 8
  1208 ;; This function calls:
  1209 ;;		_delay_ms
  1210 ;;		_programInitialize
  1211 ;;		_programLoop
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     03C9                     _main:	
  1218                           ;psect for function _main
  1219                           
  1220     03C9                     l1510:	
  1221                           ;incstack = 0
  1222                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1223                           
  1224                           
  1225                           ;main.c: 27:     delay_ms(100);
  1226     03C9  3000               	movlw	0
  1227     03CA  00F9               	movwf	delay_ms@delay+3
  1228     03CB  3000               	movlw	0
  1229     03CC  00F8               	movwf	delay_ms@delay+2
  1230     03CD  3000               	movlw	0
  1231     03CE  00F7               	movwf	delay_ms@delay+1
  1232     03CF  3064               	movlw	100
  1233     03D0  00F6               	movwf	delay_ms@delay
  1234     03D1  3183  23E8  3183   	fcall	_delay_ms
  1235                           
  1236                           ;main.c: 28:     delay_ms(141);
  1237     03D4  3000               	movlw	0
  1238     03D5  00F9               	movwf	delay_ms@delay+3
  1239     03D6  3000               	movlw	0
  1240     03D7  00F8               	movwf	delay_ms@delay+2
  1241     03D8  3000               	movlw	0
  1242     03D9  00F7               	movwf	delay_ms@delay+1
  1243     03DA  308D               	movlw	141
  1244     03DB  00F6               	movwf	delay_ms@delay
  1245     03DC  3183  23E8  3183   	fcall	_delay_ms
  1246                           
  1247                           ;main.c: 30:     programInitialize();
  1248     03DF  3184  2444  3183   	fcall	_programInitialize
  1249     03E2                     l1512:
  1250                           
  1251                           ;main.c: 33:         programLoop();
  1252     03E2  3186  2660  3183   	fcall	_programLoop
  1253     03E5  2BE2               	goto	l1512
  1254     03E6  3180  2802         	ljmp	start
  1255     03E8                     __end_of_main:
  1256                           
  1257                           	psect	text1
  1258     0660                     __ptext1:	
  1259 ;; *************** function _programLoop *****************
  1260 ;; Defined at:
  1261 ;;		line 71 in file "program.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  motorSpeed      4   45[BANK0 ] unsigned long 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         0       0       0       0       0       0       0
  1276 ;;      Locals:         0       4       0       0       0       0       0
  1277 ;;      Temps:          0       4       0       0       0       0       0
  1278 ;;      Totals:         0       8       0       0       0       0       0
  1279 ;;Total ram usage:        8 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 7
  1282 ;; This function calls:
  1283 ;;		_delay_ms
  1284 ;;		_lcd_Goto
  1285 ;;		_lcd_PrintDigitInt32
  1286 ;;		_lcd_PrintString
  1287 ;;		_motor_SetSpeed
  1288 ;;		_pb_DelayDebounce
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294     0660                     _programLoop:	
  1295                           ;psect for function _programLoop
  1296                           
  1297     0660                     l1418:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1300                           
  1301                           
  1302                           ;program.c: 72:     uint32_t motorSpeed = 0;
  1303     0660  3000               	movlw	0
  1304     0661  0020               	movlb	0	; select bank0
  1305     0662  00D0               	movwf	programLoop@motorSpeed+3
  1306     0663  3000               	movlw	0
  1307     0664  00CF               	movwf	programLoop@motorSpeed+2
  1308     0665  3000               	movlw	0
  1309     0666  00CE               	movwf	programLoop@motorSpeed+1
  1310     0667  3000               	movlw	0
  1311     0668  00CD               	movwf	programLoop@motorSpeed
  1312     0669                     l1420:
  1313                           
  1314                           ;program.c: 74:     motor_SetSpeed((uint16_t)motorSpeed);
  1315     0669  3000               	movlw	0
  1316     066A  00F0               	movwf	motor_SetSpeed@pwm
  1317     066B  00F1               	movwf	motor_SetSpeed@pwm+1
  1318     066C  3182  22E8  3186   	fcall	_motor_SetSpeed
  1319     066F                     l1422:
  1320                           
  1321                           ;program.c: 76:     lcd_Goto(0, 0);
  1322     066F  01F6               	clrf	lcd_Goto@x
  1323     0670  3000               	movlw	0
  1324     0671  3183  23AC  3186   	fcall	_lcd_Goto
  1325     0674                     l1424:
  1326                           
  1327                           ;program.c: 77:     lcd_PrintString("PWM Motor Speed");
  1328     0674  3000               	movlw	low (STR_1| (0+32768))
  1329     0675  00F6               	movwf	lcd_PrintString@string
  1330     0676  3088               	movlw	high (STR_1| (0+32768))
  1331     0677  00F7               	movwf	lcd_PrintString@string+1
  1332     0678  3183  237E  3186   	fcall	_lcd_PrintString
  1333     067B                     l1426:
  1334                           
  1335                           ;program.c: 79:     lcd_Goto(1, 0);
  1336     067B  01F6               	clrf	lcd_Goto@x
  1337     067C  3001               	movlw	1
  1338     067D  3183  23AC  3186   	fcall	_lcd_Goto
  1339     0680                     l1428:
  1340                           
  1341                           ;program.c: 80:     lcd_PrintDigitInt32((uint16_t)motorSpeed, 5, 0, 1);
  1342     0680  3000               	movlw	0
  1343     0681  0020               	movlb	0	; select bank0
  1344     0682  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1345     0683  3000               	movlw	0
  1346     0684  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1347     0685  3000               	movlw	0
  1348     0686  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1349     0687  3000               	movlw	0
  1350     0688  00A0               	movwf	lcd_PrintDigitInt32@number
  1351     0689  3005               	movlw	5
  1352     068A  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1353     068B  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1354     068C  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1355     068D  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1356     068E  3185  258C  3186   	fcall	_lcd_PrintDigitInt32
  1357     0691                     l1430:
  1358                           
  1359                           ;program.c: 83:         if(!PORTAbits.RA1) {
  1360     0691  0020               	movlb	0	; select bank0
  1361     0692  188C               	btfsc	12,1	;volatile
  1362     0693  2E95               	goto	u791
  1363     0694  2E96               	goto	u790
  1364     0695                     u791:
  1365     0695  2F05               	goto	l1454
  1366     0696                     u790:
  1367     0696                     l1432:
  1368                           
  1369                           ;program.c: 84:             lcd_Goto(1, 6);
  1370     0696  3006               	movlw	6
  1371     0697  00F6               	movwf	lcd_Goto@x
  1372     0698  3001               	movlw	1
  1373     0699  3183  23AC  3186   	fcall	_lcd_Goto
  1374                           
  1375                           ;program.c: 85:             lcd_PrintString("Up   ");
  1376     069C  3016               	movlw	low (STR_2| (0+32768))
  1377     069D  00F6               	movwf	lcd_PrintString@string
  1378     069E  3088               	movlw	high (STR_2| (0+32768))
  1379     069F  00F7               	movwf	lcd_PrintString@string+1
  1380     06A0  3183  237E  3186   	fcall	_lcd_PrintString
  1381     06A3                     l1434:
  1382                           
  1383                           ;program.c: 87:             if(motorSpeed < 65535) motorSpeed +=1000;
  1384     06A3  0020               	movlb	0	; select bank0
  1385     06A4  0850               	movf	programLoop@motorSpeed+3,w
  1386     06A5  1D03               	btfss	3,2
  1387     06A6  2EB1               	goto	u801
  1388     06A7  084F               	movf	programLoop@motorSpeed+2,w
  1389     06A8  1D03               	btfss	3,2
  1390     06A9  2EB1               	goto	u801
  1391     06AA  30FF               	movlw	255
  1392     06AB  024D               	subwf	programLoop@motorSpeed,w
  1393     06AC  30FF               	movlw	255
  1394     06AD  3B4E               	subwfb	programLoop@motorSpeed+1,w
  1395     06AE  1803               	btfsc	3,0
  1396     06AF  2EB1               	goto	u801
  1397     06B0  2EB2               	goto	u800
  1398     06B1                     u801:
  1399     06B1  2EBB               	goto	l1438
  1400     06B2                     u800:
  1401     06B2                     l1436:
  1402     06B2  30E8               	movlw	232
  1403     06B3  0020               	movlb	0	; select bank0
  1404     06B4  07CD               	addwf	programLoop@motorSpeed,f
  1405     06B5  3003               	movlw	3
  1406     06B6  3DCE               	addwfc	programLoop@motorSpeed+1,f
  1407     06B7  3000               	movlw	0
  1408     06B8  3DCF               	addwfc	programLoop@motorSpeed+2,f
  1409     06B9  3000               	movlw	0
  1410     06BA  3DD0               	addwfc	programLoop@motorSpeed+3,f
  1411     06BB                     l1438:
  1412                           
  1413                           ;program.c: 90:             if(motorSpeed > 65535) motorSpeed = 65000;
  1414     06BB  0020               	movlb	0	; select bank0
  1415     06BC  0850               	movf	programLoop@motorSpeed+3,w
  1416     06BD  1D03               	btfss	3,2
  1417     06BE  2EC5               	goto	u810
  1418     06BF  3001               	movlw	1
  1419     06C0  024F               	subwf	programLoop@motorSpeed+2,w
  1420     06C1  1C03               	btfss	3,0
  1421     06C2  2EC4               	goto	u811
  1422     06C3  2EC5               	goto	u810
  1423     06C4                     u811:
  1424     06C4  2ECE               	goto	l1442
  1425     06C5                     u810:
  1426     06C5                     l1440:
  1427     06C5  3000               	movlw	0
  1428     06C6  0020               	movlb	0	; select bank0
  1429     06C7  00D0               	movwf	programLoop@motorSpeed+3
  1430     06C8  3000               	movlw	0
  1431     06C9  00CF               	movwf	programLoop@motorSpeed+2
  1432     06CA  30FD               	movlw	253
  1433     06CB  00CE               	movwf	programLoop@motorSpeed+1
  1434     06CC  30E8               	movlw	232
  1435     06CD  00CD               	movwf	programLoop@motorSpeed
  1436     06CE                     l1442:
  1437                           
  1438                           ;program.c: 92:             lcd_Goto(1, 0);
  1439     06CE  01F6               	clrf	lcd_Goto@x
  1440     06CF  3001               	movlw	1
  1441     06D0  3183  23AC  3186   	fcall	_lcd_Goto
  1442     06D3                     l1444:
  1443                           
  1444                           ;program.c: 93:             lcd_PrintDigitInt32((uint16_t)motorSpeed, 5, 0, 1);
  1445     06D3  0020               	movlb	0	; select bank0
  1446     06D4  084D               	movf	programLoop@motorSpeed,w
  1447     06D5  00A0               	movwf	lcd_PrintDigitInt32@number
  1448     06D6  084E               	movf	programLoop@motorSpeed+1,w
  1449     06D7  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1450     06D8  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1451     06D9  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1452     06DA  3005               	movlw	5
  1453     06DB  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1454     06DC  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1455     06DD  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1456     06DE  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1457     06DF  3185  258C  3186   	fcall	_lcd_PrintDigitInt32
  1458     06E2                     l1446:
  1459                           
  1460                           ;program.c: 95:             delay_ms(90);
  1461     06E2  3000               	movlw	0
  1462     06E3  00F9               	movwf	delay_ms@delay+3
  1463     06E4  3000               	movlw	0
  1464     06E5  00F8               	movwf	delay_ms@delay+2
  1465     06E6  3000               	movlw	0
  1466     06E7  00F7               	movwf	delay_ms@delay+1
  1467     06E8  305A               	movlw	90
  1468     06E9  00F6               	movwf	delay_ms@delay
  1469     06EA  3183  23E8  3186   	fcall	_delay_ms
  1470     06ED                     l1448:
  1471                           
  1472                           ;program.c: 97:             lcd_Goto(1, 6);
  1473     06ED  3006               	movlw	6
  1474     06EE  00F6               	movwf	lcd_Goto@x
  1475     06EF  3001               	movlw	1
  1476     06F0  3183  23AC  3186   	fcall	_lcd_Goto
  1477     06F3                     l1450:
  1478                           
  1479                           ;program.c: 98:             lcd_PrintString("     ");
  1480     06F3  3010               	movlw	low (STR_3| (0+32768))
  1481     06F4  00F6               	movwf	lcd_PrintString@string
  1482     06F5  3088               	movlw	high (STR_3| (0+32768))
  1483     06F6  00F7               	movwf	lcd_PrintString@string+1
  1484     06F7  3183  237E  3186   	fcall	_lcd_PrintString
  1485     06FA                     l1452:
  1486                           
  1487                           ;program.c: 100:             delay_ms(10);
  1488     06FA  3000               	movlw	0
  1489     06FB  00F9               	movwf	delay_ms@delay+3
  1490     06FC  3000               	movlw	0
  1491     06FD  00F8               	movwf	delay_ms@delay+2
  1492     06FE  3000               	movlw	0
  1493     06FF  00F7               	movwf	delay_ms@delay+1
  1494     0700  300A               	movlw	10
  1495     0701  00F6               	movwf	delay_ms@delay
  1496     0702  3183  23E8  3186   	fcall	_delay_ms
  1497     0705                     l1454:
  1498                           
  1499                           ;program.c: 103:         if(!PORTAbits.RA2) {
  1500     0705  0020               	movlb	0	; select bank0
  1501     0706  190C               	btfsc	12,2	;volatile
  1502     0707  2F09               	goto	u821
  1503     0708  2F0A               	goto	u820
  1504     0709                     u821:
  1505     0709  2F67               	goto	l1474
  1506     070A                     u820:
  1507     070A                     l1456:
  1508                           
  1509                           ;program.c: 104:             lcd_Goto(1, 6);
  1510     070A  3006               	movlw	6
  1511     070B  00F6               	movwf	lcd_Goto@x
  1512     070C  3001               	movlw	1
  1513     070D  3183  23AC  3186   	fcall	_lcd_Goto
  1514                           
  1515                           ;program.c: 105:             lcd_PrintString("Down ");
  1516     0710  301C               	movlw	low (STR_4| (0+32768))
  1517     0711  00F6               	movwf	lcd_PrintString@string
  1518     0712  3088               	movlw	high (STR_4| (0+32768))
  1519     0713  00F7               	movwf	lcd_PrintString@string+1
  1520     0714  3183  237E  3186   	fcall	_lcd_PrintString
  1521     0717                     l1458:
  1522                           
  1523                           ;program.c: 107:             if(motorSpeed > 0) motorSpeed -=1000;
  1524     0717  0020               	movlb	0	; select bank0
  1525     0718  0850               	movf	programLoop@motorSpeed+3,w
  1526     0719  044F               	iorwf	programLoop@motorSpeed+2,w
  1527     071A  044E               	iorwf	programLoop@motorSpeed+1,w
  1528     071B  044D               	iorwf	programLoop@motorSpeed,w
  1529     071C  1903               	skipnz
  1530     071D  2F1F               	goto	u831
  1531     071E  2F20               	goto	u830
  1532     071F                     u831:
  1533     071F  2F30               	goto	l1462
  1534     0720                     u830:
  1535     0720                     l1460:
  1536     0720  30E8               	movlw	232
  1537     0721  00C9               	movwf	??_programLoop
  1538     0722  3003               	movlw	3
  1539     0723  00CA               	movwf	??_programLoop+1
  1540     0724  3000               	movlw	0
  1541     0725  00CB               	movwf	??_programLoop+2
  1542     0726  3000               	movlw	0
  1543     0727  00CC               	movwf	??_programLoop+3
  1544     0728  0849               	movf	??_programLoop,w
  1545     0729  02CD               	subwf	programLoop@motorSpeed,f
  1546     072A  084A               	movf	??_programLoop+1,w
  1547     072B  3BCE               	subwfb	programLoop@motorSpeed+1,f
  1548     072C  084B               	movf	??_programLoop+2,w
  1549     072D  3BCF               	subwfb	programLoop@motorSpeed+2,f
  1550     072E  084C               	movf	??_programLoop+3,w
  1551     072F  3BD0               	subwfb	programLoop@motorSpeed+3,f
  1552     0730                     l1462:
  1553                           
  1554                           ;program.c: 110:             lcd_Goto(1, 0);
  1555     0730  01F6               	clrf	lcd_Goto@x
  1556     0731  3001               	movlw	1
  1557     0732  3183  23AC  3186   	fcall	_lcd_Goto
  1558     0735                     l1464:
  1559                           
  1560                           ;program.c: 111:             lcd_PrintDigitInt32((uint16_t)motorSpeed, 5, 0, 1);
  1561     0735  0020               	movlb	0	; select bank0
  1562     0736  084D               	movf	programLoop@motorSpeed,w
  1563     0737  00A0               	movwf	lcd_PrintDigitInt32@number
  1564     0738  084E               	movf	programLoop@motorSpeed+1,w
  1565     0739  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1566     073A  01A2               	clrf	lcd_PrintDigitInt32@number+2
  1567     073B  01A3               	clrf	lcd_PrintDigitInt32@number+3
  1568     073C  3005               	movlw	5
  1569     073D  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1570     073E  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1571     073F  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1572     0740  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1573     0741  3185  258C  3186   	fcall	_lcd_PrintDigitInt32
  1574     0744                     l1466:
  1575                           
  1576                           ;program.c: 113:             delay_ms(90);
  1577     0744  3000               	movlw	0
  1578     0745  00F9               	movwf	delay_ms@delay+3
  1579     0746  3000               	movlw	0
  1580     0747  00F8               	movwf	delay_ms@delay+2
  1581     0748  3000               	movlw	0
  1582     0749  00F7               	movwf	delay_ms@delay+1
  1583     074A  305A               	movlw	90
  1584     074B  00F6               	movwf	delay_ms@delay
  1585     074C  3183  23E8  3186   	fcall	_delay_ms
  1586     074F                     l1468:
  1587                           
  1588                           ;program.c: 115:             lcd_Goto(1, 6);
  1589     074F  3006               	movlw	6
  1590     0750  00F6               	movwf	lcd_Goto@x
  1591     0751  3001               	movlw	1
  1592     0752  3183  23AC  3186   	fcall	_lcd_Goto
  1593     0755                     l1470:
  1594                           
  1595                           ;program.c: 116:             lcd_PrintString("     ");
  1596     0755  3010               	movlw	low (STR_3| (0+32768))
  1597     0756  00F6               	movwf	lcd_PrintString@string
  1598     0757  3088               	movlw	high (STR_3| (0+32768))
  1599     0758  00F7               	movwf	lcd_PrintString@string+1
  1600     0759  3183  237E  3186   	fcall	_lcd_PrintString
  1601     075C                     l1472:
  1602                           
  1603                           ;program.c: 118:             delay_ms(10);
  1604     075C  3000               	movlw	0
  1605     075D  00F9               	movwf	delay_ms@delay+3
  1606     075E  3000               	movlw	0
  1607     075F  00F8               	movwf	delay_ms@delay+2
  1608     0760  3000               	movlw	0
  1609     0761  00F7               	movwf	delay_ms@delay+1
  1610     0762  300A               	movlw	10
  1611     0763  00F6               	movwf	delay_ms@delay
  1612     0764  3183  23E8  3186   	fcall	_delay_ms
  1613     0767                     l1474:
  1614                           
  1615                           ;program.c: 121:         if(!PORTAbits.RA3) {
  1616     0767  0020               	movlb	0	; select bank0
  1617     0768  198C               	btfsc	12,3	;volatile
  1618     0769  2F6B               	goto	u841
  1619     076A  2F6C               	goto	u840
  1620     076B                     u841:
  1621     076B  2FAB               	goto	l1490
  1622     076C                     u840:
  1623     076C                     l1476:
  1624                           
  1625                           ;program.c: 122:             lcd_Goto(1, 6);
  1626     076C  3006               	movlw	6
  1627     076D  00F6               	movwf	lcd_Goto@x
  1628     076E  3001               	movlw	1
  1629     076F  3183  23AC  3186   	fcall	_lcd_Goto
  1630                           
  1631                           ;program.c: 123:             lcd_PrintString("Left ");
  1632     0772  3022               	movlw	low (STR_6| (0+32768))
  1633     0773  00F6               	movwf	lcd_PrintString@string
  1634     0774  3088               	movlw	high (STR_6| (0+32768))
  1635     0775  00F7               	movwf	lcd_PrintString@string+1
  1636     0776  3183  237E  3186   	fcall	_lcd_PrintString
  1637     0779                     l1478:
  1638                           
  1639                           ;program.c: 125:             if(motorSpeed > 65535) motor_SetSpeed(65535);
  1640     0779  0020               	movlb	0	; select bank0
  1641     077A  0850               	movf	programLoop@motorSpeed+3,w
  1642     077B  1D03               	btfss	3,2
  1643     077C  2F83               	goto	u850
  1644     077D  3001               	movlw	1
  1645     077E  024F               	subwf	programLoop@motorSpeed+2,w
  1646     077F  1C03               	btfss	3,0
  1647     0780  2F82               	goto	u851
  1648     0781  2F83               	goto	u850
  1649     0782                     u851:
  1650     0782  2F8B               	goto	l1482
  1651     0783                     u850:
  1652     0783                     l1480:
  1653     0783  30FF               	movlw	255
  1654     0784  00F0               	movwf	motor_SetSpeed@pwm
  1655     0785  30FF               	movlw	255
  1656     0786  00F1               	movwf	motor_SetSpeed@pwm+1
  1657     0787  3182  22E8  3186   	fcall	_motor_SetSpeed
  1658     078A  2F93               	goto	l1484
  1659     078B                     l1482:
  1660     078B  0020               	movlb	0	; select bank0
  1661     078C  084E               	movf	programLoop@motorSpeed+1,w
  1662     078D  00F1               	movwf	motor_SetSpeed@pwm+1
  1663     078E  084D               	movf	programLoop@motorSpeed,w
  1664     078F  00F0               	movwf	motor_SetSpeed@pwm
  1665     0790  3182  22E8  3186   	fcall	_motor_SetSpeed
  1666     0793                     l1484:
  1667                           
  1668                           ;program.c: 128:             LATBbits.LATB0 = 1;;
  1669     0793  0022               	movlb	2	; select bank2
  1670     0794  140D               	bsf	13,0	;volatile
  1671     0795                     l111:	
  1672                           ;program.c: 130:             while(!PORTAbits.RA3);
  1673                           
  1674     0795  0020               	movlb	0	; select bank0
  1675     0796  1D8C               	btfss	12,3	;volatile
  1676     0797  2F99               	goto	u861
  1677     0798  2F9A               	goto	u860
  1678     0799                     u861:
  1679     0799  2F95               	goto	l111
  1680     079A                     u860:
  1681     079A                     l1486:
  1682                           
  1683                           ;program.c: 132:             lcd_Goto(1, 6);
  1684     079A  3006               	movlw	6
  1685     079B  00F6               	movwf	lcd_Goto@x
  1686     079C  3001               	movlw	1
  1687     079D  3183  23AC  3186   	fcall	_lcd_Goto
  1688                           
  1689                           ;program.c: 133:             lcd_PrintString("     ");
  1690     07A0  3010               	movlw	low (STR_3| (0+32768))
  1691     07A1  00F6               	movwf	lcd_PrintString@string
  1692     07A2  3088               	movlw	high (STR_3| (0+32768))
  1693     07A3  00F7               	movwf	lcd_PrintString@string+1
  1694     07A4  3183  237E  3186   	fcall	_lcd_PrintString
  1695     07A7                     l1488:
  1696                           
  1697                           ;program.c: 135:             pb_DelayDebounce();
  1698     07A7  3183  2310  3186   	fcall	_pb_DelayDebounce
  1699                           
  1700                           ;program.c: 136:         } else {
  1701     07AA  2FB1               	goto	l1492
  1702     07AB                     l1490:
  1703                           
  1704                           ;program.c: 137:             motor_SetSpeed(0);
  1705     07AB  3000               	movlw	0
  1706     07AC  00F0               	movwf	motor_SetSpeed@pwm
  1707     07AD  00F1               	movwf	motor_SetSpeed@pwm+1
  1708     07AE  3182  22E8  3186   	fcall	_motor_SetSpeed
  1709     07B1                     l1492:
  1710                           
  1711                           ;program.c: 140:         if(!PORTAbits.RA4) {
  1712     07B1  0020               	movlb	0	; select bank0
  1713     07B2  1A0C               	btfsc	12,4	;volatile
  1714     07B3  2FB5               	goto	u871
  1715     07B4  2FB6               	goto	u870
  1716     07B5                     u871:
  1717     07B5  2FF5               	goto	l1508
  1718     07B6                     u870:
  1719     07B6                     l1494:
  1720                           
  1721                           ;program.c: 141:             lcd_Goto(1, 6);
  1722     07B6  3006               	movlw	6
  1723     07B7  00F6               	movwf	lcd_Goto@x
  1724     07B8  3001               	movlw	1
  1725     07B9  3183  23AC  3186   	fcall	_lcd_Goto
  1726                           
  1727                           ;program.c: 142:             lcd_PrintString("Right");
  1728     07BC  3028               	movlw	low (STR_8| (0+32768))
  1729     07BD  00F6               	movwf	lcd_PrintString@string
  1730     07BE  3088               	movlw	high (STR_8| (0+32768))
  1731     07BF  00F7               	movwf	lcd_PrintString@string+1
  1732     07C0  3183  237E  3186   	fcall	_lcd_PrintString
  1733     07C3                     l1496:
  1734                           
  1735                           ;program.c: 144:             if(motorSpeed > 65535) motor_SetSpeed(65535);
  1736     07C3  0020               	movlb	0	; select bank0
  1737     07C4  0850               	movf	programLoop@motorSpeed+3,w
  1738     07C5  1D03               	btfss	3,2
  1739     07C6  2FCD               	goto	u880
  1740     07C7  3001               	movlw	1
  1741     07C8  024F               	subwf	programLoop@motorSpeed+2,w
  1742     07C9  1C03               	btfss	3,0
  1743     07CA  2FCC               	goto	u881
  1744     07CB  2FCD               	goto	u880
  1745     07CC                     u881:
  1746     07CC  2FD5               	goto	l1500
  1747     07CD                     u880:
  1748     07CD                     l1498:
  1749     07CD  30FF               	movlw	255
  1750     07CE  00F0               	movwf	motor_SetSpeed@pwm
  1751     07CF  30FF               	movlw	255
  1752     07D0  00F1               	movwf	motor_SetSpeed@pwm+1
  1753     07D1  3182  22E8  3186   	fcall	_motor_SetSpeed
  1754     07D4  2FDD               	goto	l1502
  1755     07D5                     l1500:
  1756     07D5  0020               	movlb	0	; select bank0
  1757     07D6  084E               	movf	programLoop@motorSpeed+1,w
  1758     07D7  00F1               	movwf	motor_SetSpeed@pwm+1
  1759     07D8  084D               	movf	programLoop@motorSpeed,w
  1760     07D9  00F0               	movwf	motor_SetSpeed@pwm
  1761     07DA  3182  22E8  3186   	fcall	_motor_SetSpeed
  1762     07DD                     l1502:
  1763                           
  1764                           ;program.c: 147:             LATBbits.LATB0 = 0;;
  1765     07DD  0022               	movlb	2	; select bank2
  1766     07DE  100D               	bcf	13,0	;volatile
  1767     07DF                     l118:	
  1768                           ;program.c: 149:             while(!PORTAbits.RA4);
  1769                           
  1770     07DF  0020               	movlb	0	; select bank0
  1771     07E0  1E0C               	btfss	12,4	;volatile
  1772     07E1  2FE3               	goto	u891
  1773     07E2  2FE4               	goto	u890
  1774     07E3                     u891:
  1775     07E3  2FDF               	goto	l118
  1776     07E4                     u890:
  1777     07E4                     l1504:
  1778                           
  1779                           ;program.c: 151:             lcd_Goto(1, 6);
  1780     07E4  3006               	movlw	6
  1781     07E5  00F6               	movwf	lcd_Goto@x
  1782     07E6  3001               	movlw	1
  1783     07E7  3183  23AC  3186   	fcall	_lcd_Goto
  1784                           
  1785                           ;program.c: 152:             lcd_PrintString("     ");
  1786     07EA  3010               	movlw	low (STR_3| (0+32768))
  1787     07EB  00F6               	movwf	lcd_PrintString@string
  1788     07EC  3088               	movlw	high (STR_3| (0+32768))
  1789     07ED  00F7               	movwf	lcd_PrintString@string+1
  1790     07EE  3183  237E  3186   	fcall	_lcd_PrintString
  1791     07F1                     l1506:
  1792                           
  1793                           ;program.c: 154:             pb_DelayDebounce();
  1794     07F1  3183  2310  3186   	fcall	_pb_DelayDebounce
  1795                           
  1796                           ;program.c: 155:         } else {
  1797     07F4  2E91               	goto	l1430
  1798     07F5                     l1508:
  1799                           
  1800                           ;program.c: 156:             motor_SetSpeed(0);
  1801     07F5  3000               	movlw	0
  1802     07F6  00F0               	movwf	motor_SetSpeed@pwm
  1803     07F7  00F1               	movwf	motor_SetSpeed@pwm+1
  1804     07F8  3182  22E8  3186   	fcall	_motor_SetSpeed
  1805     07FB  2E91               	goto	l1430
  1806     07FC  0008               	return
  1807     07FD                     __end_of_programLoop:
  1808                           
  1809                           	psect	text2
  1810     0310                     __ptext2:	
  1811 ;; *************** function _pb_DelayDebounce *****************
  1812 ;; Defined at:
  1813 ;;		line 163 in file "program.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 3
  1834 ;; This function calls:
  1835 ;;		_delay_ms
  1836 ;; This function is called by:
  1837 ;;		_programLoop
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     0310                     _pb_DelayDebounce:	
  1842                           ;psect for function _pb_DelayDebounce
  1843                           
  1844     0310                     l1412:	
  1845                           ;incstack = 0
  1846                           ; Regs used in _pb_DelayDebounce: [wreg+status,2+status,0+pclath+cstack]
  1847                           
  1848                           
  1849                           ;program.c: 164:     delay_ms(200);
  1850     0310  3000               	movlw	0
  1851     0311  00F9               	movwf	delay_ms@delay+3
  1852     0312  3000               	movlw	0
  1853     0313  00F8               	movwf	delay_ms@delay+2
  1854     0314  3000               	movlw	0
  1855     0315  00F7               	movwf	delay_ms@delay+1
  1856     0316  30C8               	movlw	200
  1857     0317  00F6               	movwf	delay_ms@delay
  1858     0318  3183  23E8  3183   	fcall	_delay_ms
  1859     031B                     l127:
  1860     031B  0008               	return
  1861     031C                     __end_of_pb_DelayDebounce:
  1862                           
  1863                           	psect	text3
  1864     02E8                     __ptext3:	
  1865 ;; *************** function _motor_SetSpeed *****************
  1866 ;; Defined at:
  1867 ;;		line 370 in file "program.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  pwm             2    0[COMMON] unsigned short 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1881 ;;      Params:         2       0       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0
  1884 ;;      Totals:         2       0       0       0       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_programLoop
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894     02E8                     _motor_SetSpeed:	
  1895                           ;psect for function _motor_SetSpeed
  1896                           
  1897     02E8                     l1334:	
  1898                           ;incstack = 0
  1899                           ; Regs used in _motor_SetSpeed: [wreg+status,2]
  1900                           
  1901                           
  1902                           ;program.c: 372:     PSMC1DCH = (uint8_t)(pwm >> 8);
  1903     02E8  0871               	movf	motor_SetSpeed@pwm+1,w
  1904     02E9  0030               	movlb	16	; select bank16
  1905     02EA  00A4               	movwf	36	;volatile
  1906     02EB                     l1336:
  1907                           
  1908                           ;program.c: 373:     PSMC1DCL = (uint8_t)pwm;
  1909     02EB  0870               	movf	motor_SetSpeed@pwm,w
  1910     02EC  00A3               	movwf	35	;volatile
  1911     02ED                     l1338:
  1912                           
  1913                           ;program.c: 375:     PSMC1CONbits.PSMC1LD = 1;
  1914     02ED  1711               	bsf	17,6	;volatile
  1915     02EE                     l195:
  1916     02EE  0008               	return
  1917     02EF                     __end_of_motor_SetSpeed:
  1918                           
  1919                           	psect	text4
  1920     058C                     __ptext4:	
  1921 ;; *************** function _lcd_PrintDigitInt32 *****************
  1922 ;; Defined at:
  1923 ;;		line 301 in file "program.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  number          4    0[BANK0 ] long 
  1926 ;;  noDigit         1    4[BANK0 ] unsigned char 
  1927 ;;  enSign          1    5[BANK0 ] _Bool 
  1928 ;;  enZero          1    6[BANK0 ] _Bool 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  tempN           4   33[BANK0 ] long 
  1931 ;;  tempC           1   37[BANK0 ] unsigned char 
  1932 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  1933 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  1934 ;;  i1              1   40[BANK0 ] unsigned char 
  1935 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  1936 ;;  i2              1   38[BANK0 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         0       7       0       0       0       0       0
  1947 ;;      Locals:         0      30       0       0       0       0       0
  1948 ;;      Temps:          0       4       0       0       0       0       0
  1949 ;;      Totals:         0      41       0       0       0       0       0
  1950 ;;Total ram usage:       41 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 6
  1953 ;; This function calls:
  1954 ;;		___aldiv
  1955 ;;		___bmul
  1956 ;;		_labs
  1957 ;;		_lcd_PrintChar
  1958 ;;		_lcd_PrintString
  1959 ;;		_memset
  1960 ;; This function is called by:
  1961 ;;		_programLoop
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     058C                     _lcd_PrintDigitInt32:	
  1966                           ;psect for function _lcd_PrintDigitInt32
  1967                           
  1968     058C                     l1352:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1971                           
  1972                           
  1973                           ;program.c: 302:     uint8_t i1 = 0,
  1974     058C  0020               	movlb	0	; select bank0
  1975     058D  01C8               	clrf	lcd_PrintDigitInt32@i1
  1976                           
  1977                           ;program.c: 304:             totalDigit = 0;
  1978     058E  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  1979     058F                     l1354:
  1980                           
  1981                           ;program.c: 306:     char numberRevChar[11];;program.c: 307:     char numberChar[11];;pr
      +                          ogram.c: 309:     memset(numberRevChar, 0, 11);
  1982     058F  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1983     0590  00F0               	movwf	memset@dest
  1984     0591  3000               	movlw	0
  1985     0592  00F1               	movwf	memset@c
  1986     0593  00F2               	movwf	memset@c+1
  1987     0594  300B               	movlw	11
  1988     0595  00F3               	movwf	memset@n
  1989     0596  3000               	movlw	0
  1990     0597  00F4               	movwf	memset@n+1
  1991     0598  3183  2395  3185   	fcall	_memset
  1992     059B                     l1356:
  1993                           
  1994                           ;program.c: 310:     memset(numberChar, 0, 11);
  1995     059B  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1996     059C  00F0               	movwf	memset@dest
  1997     059D  3000               	movlw	0
  1998     059E  00F1               	movwf	memset@c
  1999     059F  00F2               	movwf	memset@c+1
  2000     05A0  300B               	movlw	11
  2001     05A1  00F3               	movwf	memset@n
  2002     05A2  3000               	movlw	0
  2003     05A3  00F4               	movwf	memset@n+1
  2004     05A4  3183  2395  3185   	fcall	_memset
  2005     05A7                     l1358:
  2006                           
  2007                           ;program.c: 312:     if(number<0) {
  2008     05A7  0020               	movlb	0	; select bank0
  2009     05A8  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  2010     05A9  2DAB               	goto	u721
  2011     05AA  2DAC               	goto	u720
  2012     05AB                     u721:
  2013     05AB  2DCB               	goto	l1364
  2014     05AC                     u720:
  2015     05AC                     l1360:
  2016                           
  2017                           ;program.c: 313:         if(enSign) lcd_PrintChar('-');
  2018     05AC  0825               	movf	lcd_PrintDigitInt32@enSign,w
  2019     05AD  1903               	btfsc	3,2
  2020     05AE  2DB0               	goto	u731
  2021     05AF  2DB1               	goto	u730
  2022     05B0                     u731:
  2023     05B0  2DB5               	goto	l177
  2024     05B1                     u730:
  2025     05B1                     l1362:
  2026     05B1  302D               	movlw	45
  2027     05B2  3183  2305  3185   	fcall	_lcd_PrintChar
  2028     05B5                     l177:
  2029                           
  2030                           ;program.c: 314:         number = labs(number);
  2031     05B5  0020               	movlb	0	; select bank0
  2032     05B6  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2033     05B7  00F3               	movwf	labs@a+3
  2034     05B8  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2035     05B9  00F2               	movwf	labs@a+2
  2036     05BA  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2037     05BB  00F1               	movwf	labs@a+1
  2038     05BC  0820               	movf	lcd_PrintDigitInt32@number,w
  2039     05BD  00F0               	movwf	labs@a
  2040     05BE  3183  233C  3185   	fcall	_labs
  2041     05C1  0873               	movf	?_labs+3,w
  2042     05C2  0020               	movlb	0	; select bank0
  2043     05C3  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2044     05C4  0872               	movf	?_labs+2,w
  2045     05C5  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2046     05C6  0871               	movf	?_labs+1,w
  2047     05C7  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2048     05C8  0870               	movf	?_labs,w
  2049     05C9  00A0               	movwf	lcd_PrintDigitInt32@number
  2050                           
  2051                           ;program.c: 315:     } else {
  2052     05CA  2DD4               	goto	l1368
  2053     05CB                     l1364:
  2054                           
  2055                           ;program.c: 316:         if(enSign) lcd_PrintChar(' ');
  2056     05CB  0825               	movf	lcd_PrintDigitInt32@enSign,w
  2057     05CC  1903               	btfsc	3,2
  2058     05CD  2DCF               	goto	u741
  2059     05CE  2DD0               	goto	u740
  2060     05CF                     u741:
  2061     05CF  2DD4               	goto	l1368
  2062     05D0                     u740:
  2063     05D0                     l1366:
  2064     05D0  3020               	movlw	32
  2065     05D1  3183  2305  3185   	fcall	_lcd_PrintChar
  2066     05D4                     l1368:
  2067                           
  2068                           ;program.c: 320:         int32_t tempN = number;
  2069     05D4  0020               	movlb	0	; select bank0
  2070     05D5  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2071     05D6  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  2072     05D7  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2073     05D8  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  2074     05D9  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2075     05DA  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  2076     05DB  0820               	movf	lcd_PrintDigitInt32@number,w
  2077     05DC  00C1               	movwf	lcd_PrintDigitInt32@tempN
  2078     05DD                     l1370:
  2079                           
  2080                           ;program.c: 321:         number /= 10;
  2081     05DD  3000               	movlw	0
  2082     05DE  00F3               	movwf	___aldiv@divisor+3
  2083     05DF  3000               	movlw	0
  2084     05E0  00F2               	movwf	___aldiv@divisor+2
  2085     05E1  3000               	movlw	0
  2086     05E2  00F1               	movwf	___aldiv@divisor+1
  2087     05E3  300A               	movlw	10
  2088     05E4  00F0               	movwf	___aldiv@divisor
  2089     05E5  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2090     05E6  00F7               	movwf	___aldiv@dividend+3
  2091     05E7  0822               	movf	lcd_PrintDigitInt32@number+2,w
  2092     05E8  00F6               	movwf	___aldiv@dividend+2
  2093     05E9  0821               	movf	lcd_PrintDigitInt32@number+1,w
  2094     05EA  00F5               	movwf	___aldiv@dividend+1
  2095     05EB  0820               	movf	lcd_PrintDigitInt32@number,w
  2096     05EC  00F4               	movwf	___aldiv@dividend
  2097     05ED  3185  2501  3185   	fcall	___aldiv
  2098     05F0  0873               	movf	?___aldiv+3,w
  2099     05F1  0020               	movlb	0	; select bank0
  2100     05F2  00A3               	movwf	lcd_PrintDigitInt32@number+3
  2101     05F3  0872               	movf	?___aldiv+2,w
  2102     05F4  00A2               	movwf	lcd_PrintDigitInt32@number+2
  2103     05F5  0871               	movf	?___aldiv+1,w
  2104     05F6  00A1               	movwf	lcd_PrintDigitInt32@number+1
  2105     05F7  0870               	movf	?___aldiv,w
  2106     05F8  00A0               	movwf	lcd_PrintDigitInt32@number
  2107     05F9                     l1372:
  2108                           
  2109                           ;program.c: 322:         char tempC = (char)(tempN -10 * number);
  2110     05F9  30F6               	movlw	246
  2111     05FA  00F0               	movwf	___bmul@multiplicand
  2112     05FB  0820               	movf	lcd_PrintDigitInt32@number,w
  2113     05FC  3183  2329  3185   	fcall	___bmul
  2114     05FF  0020               	movlb	0	; select bank0
  2115     0600  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  2116     0601  00C5               	movwf	lcd_PrintDigitInt32@tempC
  2117     0602                     l1374:
  2118                           
  2119                           ;program.c: 323:         numberRevChar[i1] = tempC + 48;
  2120     0602  0848               	movf	lcd_PrintDigitInt32@i1,w
  2121     0603  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2122     0604  0086               	movwf	6
  2123     0605  0187               	clrf	7
  2124     0606  0845               	movf	lcd_PrintDigitInt32@tempC,w
  2125     0607  3E30               	addlw	48
  2126     0608  0081               	movwf	1
  2127     0609                     l1376:
  2128                           
  2129                           ;program.c: 324:         i1++;
  2130     0609  3001               	movlw	1
  2131     060A  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2132     060B                     l1378:
  2133                           
  2134                           ;program.c: 325:     } while(number);
  2135     060B  0823               	movf	lcd_PrintDigitInt32@number+3,w
  2136     060C  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  2137     060D  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  2138     060E  0420               	iorwf	lcd_PrintDigitInt32@number,w
  2139     060F  1D03               	skipz
  2140     0610  2E12               	goto	u751
  2141     0611  2E13               	goto	u750
  2142     0612                     u751:
  2143     0612  2DD4               	goto	l1368
  2144     0613                     u750:
  2145     0613                     l1380:
  2146                           
  2147                           ;program.c: 327:     totalDigit = i1;
  2148     0613  0848               	movf	lcd_PrintDigitInt32@i1,w
  2149     0614  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  2150     0615                     l1382:
  2151                           
  2152                           ;program.c: 329:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  2153     0615  01C8               	clrf	lcd_PrintDigitInt32@i1
  2154     0616  2E29               	goto	l1392
  2155     0617                     l1384:
  2156                           
  2157                           ;program.c: 330:         if(enZero) lcd_PrintChar('0');
  2158     0617  0020               	movlb	0	; select bank0
  2159     0618  0826               	movf	lcd_PrintDigitInt32@enZero,w
  2160     0619  1903               	btfsc	3,2
  2161     061A  2E1C               	goto	u761
  2162     061B  2E1D               	goto	u760
  2163     061C                     u761:
  2164     061C  2E22               	goto	l1388
  2165     061D                     u760:
  2166     061D                     l1386:
  2167     061D  3030               	movlw	48
  2168     061E  3183  2305  3185   	fcall	_lcd_PrintChar
  2169     0621  2E26               	goto	l1390
  2170     0622                     l1388:
  2171     0622  3020               	movlw	32
  2172     0623  3183  2305  3185   	fcall	_lcd_PrintChar
  2173     0626                     l1390:
  2174                           
  2175                           ;program.c: 332:     }
  2176     0626  3001               	movlw	1
  2177     0627  0020               	movlb	0	; select bank0
  2178     0628  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  2179     0629                     l1392:
  2180     0629  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  2181     062A  00A7               	movwf	??_lcd_PrintDigitInt32
  2182     062B  01A8               	clrf	??_lcd_PrintDigitInt32+1
  2183     062C  0828               	movf	??_lcd_PrintDigitInt32+1,w
  2184     062D  00AA               	movwf	??_lcd_PrintDigitInt32+3
  2185     062E  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2186     062F  0227               	subwf	??_lcd_PrintDigitInt32,w
  2187     0630  00A9               	movwf	??_lcd_PrintDigitInt32+2
  2188     0631  1C03               	skipc
  2189     0632  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  2190     0633  082A               	movf	??_lcd_PrintDigitInt32+3,w
  2191     0634  3A80               	xorlw	128
  2192     0635  3C80               	sublw	128
  2193     0636  1D03               	skipz
  2194     0637  2E3A               	goto	u775
  2195     0638  0829               	movf	??_lcd_PrintDigitInt32+2,w
  2196     0639  0248               	subwf	lcd_PrintDigitInt32@i1,w
  2197     063A                     u775:
  2198     063A  1C03               	skipc
  2199     063B  2E3D               	goto	u771
  2200     063C  2E3E               	goto	u770
  2201     063D                     u771:
  2202     063D  2E17               	goto	l1384
  2203     063E                     u770:
  2204     063E                     l1394:
  2205                           
  2206                           ;program.c: 334:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  2207     063E  0020               	movlb	0	; select bank0
  2208     063F  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  2209     0640  00C8               	movwf	lcd_PrintDigitInt32@i1
  2210     0641                     l1396:
  2211     0641  01C6               	clrf	lcd_PrintDigitInt32@i2
  2212     0642                     l1398:
  2213     0642  0848               	movf	lcd_PrintDigitInt32@i1,w
  2214     0643  1D03               	btfss	3,2
  2215     0644  2E46               	goto	u781
  2216     0645  2E47               	goto	u780
  2217     0646                     u781:
  2218     0646  2E48               	goto	l1402
  2219     0647                     u780:
  2220     0647  2E58               	goto	l1410
  2221     0648                     l1402:
  2222                           
  2223                           ;program.c: 335:         numberChar[i2] = numberRevChar[i1-1];
  2224     0648  0846               	movf	lcd_PrintDigitInt32@i2,w
  2225     0649  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  2226     064A  0086               	movwf	6
  2227     064B  0187               	clrf	7
  2228     064C  0848               	movf	lcd_PrintDigitInt32@i1,w
  2229     064D  3EFF               	addlw	255
  2230     064E  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  2231     064F  0084               	movwf	4
  2232     0650  0185               	clrf	5
  2233     0651  0800               	movf	0,w
  2234     0652  0081               	movwf	1
  2235     0653                     l1404:
  2236                           
  2237                           ;program.c: 336:     }
  2238     0653  3001               	movlw	1
  2239     0654  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  2240     0655                     l1406:
  2241     0655  3001               	movlw	1
  2242     0656  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  2243     0657  2E42               	goto	l1398
  2244     0658                     l1410:
  2245                           
  2246                           ;program.c: 338:     lcd_PrintString(numberChar);
  2247     0658  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  2248     0659  00F6               	movwf	lcd_PrintString@string
  2249     065A  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  2250     065B  00F7               	movwf	lcd_PrintString@string+1
  2251     065C  3183  237E  3185   	fcall	_lcd_PrintString
  2252     065F                     l189:
  2253     065F  0008               	return
  2254     0660                     __end_of_lcd_PrintDigitInt32:
  2255                           
  2256                           	psect	text5
  2257     0395                     __ptext5:	
  2258 ;; *************** function _memset *****************
  2259 ;; Defined at:
  2260 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  dest            1    0[COMMON] PTR void 
  2263 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2264 ;;  c               2    1[COMMON] int 
  2265 ;;  n               2    3[COMMON] unsigned int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  p               1    5[COMMON] PTR unsigned char 
  2268 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    0[COMMON] PTR void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         5       0       0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0
  2281 ;;      Totals:         6       0       0       0       0       0       0
  2282 ;;Total ram usage:        6 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_lcd_PrintDigitInt32
  2288 ;;		_lcd_PrintInt32
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292     0395                     _memset:	
  2293                           ;psect for function _memset
  2294                           
  2295     0395                     l1262:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2298                           
  2299     0395  0870               	movf	memset@dest,w
  2300     0396  00F5               	movwf	memset@p
  2301     0397  2B9F               	goto	l1268
  2302     0398                     l1264:
  2303     0398  0875               	movf	memset@p,w
  2304     0399  0086               	movwf	6
  2305     039A  0187               	clrf	7
  2306     039B  0871               	movf	memset@c,w
  2307     039C  0081               	movwf	1
  2308     039D                     l1266:
  2309     039D  3001               	movlw	1
  2310     039E  07F5               	addwf	memset@p,f
  2311     039F                     l1268:
  2312     039F  3001               	movlw	1
  2313     03A0  02F3               	subwf	memset@n,f
  2314     03A1  3000               	movlw	0
  2315     03A2  3BF4               	subwfb	memset@n+1,f
  2316     03A3  0A73               	incf	memset@n,w
  2317     03A4  1D03               	skipz
  2318     03A5  2BAA               	goto	u581
  2319     03A6  0A74               	incf	memset@n+1,w
  2320     03A7  1D03               	btfss	3,2
  2321     03A8  2BAA               	goto	u581
  2322     03A9  2BAB               	goto	u580
  2323     03AA                     u581:
  2324     03AA  2B98               	goto	l1264
  2325     03AB                     u580:
  2326     03AB                     l814:
  2327     03AB  0008               	return
  2328     03AC                     __end_of_memset:
  2329                           
  2330                           	psect	text6
  2331     037E                     __ptext6:	
  2332 ;; *************** function _lcd_PrintString *****************
  2333 ;; Defined at:
  2334 ;;		line 261 in file "program.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  string          2    6[COMMON] PTR unsigned char 
  2337 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_9(6), STR_8(6), 
  2338 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  2339 ;;		 -> STR_3(6), STR_2(6), STR_1(16), 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2351 ;;      Params:         2       0       0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0
  2353 ;;      Temps:          1       0       0       0       0       0       0
  2354 ;;      Totals:         3       0       0       0       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 5
  2358 ;; This function calls:
  2359 ;;		_lcd_PrintChar
  2360 ;; This function is called by:
  2361 ;;		_programLoop
  2362 ;;		_lcd_PrintDigitInt32
  2363 ;;		_lcd_PrintInt32
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367     037E                     _lcd_PrintString:	
  2368                           ;psect for function _lcd_PrintString
  2369                           
  2370     037E                     l1250:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2373                           
  2374                           
  2375                           ;program.c: 262:     while(*string!=0) {
  2376     037E  2B8B               	goto	l1256
  2377     037F                     l1252:
  2378                           
  2379                           ;program.c: 263:         lcd_PrintChar(*string);
  2380     037F  0876               	movf	lcd_PrintString@string,w
  2381     0380  0084               	movwf	4
  2382     0381  0877               	movf	lcd_PrintString@string+1,w
  2383     0382  0085               	movwf	5
  2384     0383  0800               	movf	0,w	;code access
  2385     0384  3183  2305  3183   	fcall	_lcd_PrintChar
  2386     0387                     l1254:
  2387                           
  2388                           ;program.c: 264:         string++;
  2389     0387  3001               	movlw	1
  2390     0388  07F6               	addwf	lcd_PrintString@string,f
  2391     0389  3000               	movlw	0
  2392     038A  3DF7               	addwfc	lcd_PrintString@string+1,f
  2393     038B                     l1256:
  2394                           
  2395                           ;program.c: 262:     while(*string!=0) {
  2396     038B  0876               	movf	lcd_PrintString@string,w
  2397     038C  0084               	movwf	4
  2398     038D  0877               	movf	lcd_PrintString@string+1,w
  2399     038E  0085               	movwf	5
  2400     038F  0012               	moviw fsr0++
  2401     0390  1D03               	btfss	3,2
  2402     0391  2B93               	goto	u571
  2403     0392  2B94               	goto	u570
  2404     0393                     u571:
  2405     0393  2B7F               	goto	l1252
  2406     0394                     u570:
  2407     0394                     l165:
  2408     0394  0008               	return
  2409     0395                     __end_of_lcd_PrintString:
  2410                           
  2411                           	psect	text7
  2412     0305                     __ptext7:	
  2413 ;; *************** function _lcd_PrintChar *****************
  2414 ;; Defined at:
  2415 ;;		line 254 in file "program.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  character       1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  character       1    5[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2429 ;;      Params:         0       0       0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 4
  2436 ;; This function calls:
  2437 ;;		_lcd_DelaySetupTime
  2438 ;;		_lcd_WriteData
  2439 ;; This function is called by:
  2440 ;;		_lcd_PrintString
  2441 ;;		_lcd_PrintDigitInt32
  2442 ;;		_lcd_PrintInt32
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     0305                     _lcd_PrintChar:	
  2447                           ;psect for function _lcd_PrintChar
  2448                           
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  2452                           ;lcd_PrintChar@character stored from wreg
  2453     0305  00F5               	movwf	lcd_PrintChar@character
  2454     0306                     l1238:
  2455                           
  2456                           ;program.c: 255:     LATBbits.LATB5 = 1;
  2457     0306  0022               	movlb	2	; select bank2
  2458     0307  168D               	bsf	13,5	;volatile
  2459     0308                     l1240:
  2460                           
  2461                           ;program.c: 256:     lcd_DelaySetupTime();
  2462     0308  3182  22DE  3183   	fcall	_lcd_DelaySetupTime
  2463                           
  2464                           ;program.c: 258:     lcd_WriteData(character);
  2465     030B  0875               	movf	lcd_PrintChar@character,w
  2466     030C  3184  2479  3183   	fcall	_lcd_WriteData
  2467     030F                     l159:
  2468     030F  0008               	return
  2469     0310                     __end_of_lcd_PrintChar:
  2470                           
  2471                           	psect	text8
  2472     033C                     __ptext8:	
  2473 ;; *************** function _labs *****************
  2474 ;; Defined at:
  2475 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  a               4    0[COMMON] long 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  4    0[COMMON] long 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2489 ;;      Params:         4       0       0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0
  2492 ;;      Totals:         4       0       0       0       0       0       0
  2493 ;;Total ram usage:        4 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_lcd_PrintDigitInt32
  2499 ;;		_lcd_PrintInt32
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503     033C                     _labs:	
  2504                           ;psect for function _labs
  2505                           
  2506     033C                     l1270:	
  2507                           ;incstack = 0
  2508                           ; Regs used in _labs: [wreg+status,2+status,0]
  2509                           
  2510     033C  1BF3               	btfsc	labs@a+3,7
  2511     033D  2B3F               	goto	u591
  2512     033E  2B40               	goto	u590
  2513     033F                     u591:
  2514     033F  2B41               	goto	l1274
  2515     0340                     u590:
  2516     0340                     l1272:
  2517     0340  2B50               	goto	l808
  2518     0341                     l1274:
  2519     0341  0970               	comf	labs@a,w
  2520     0342  00F0               	movwf	?_labs
  2521     0343  0971               	comf	labs@a+1,w
  2522     0344  00F1               	movwf	?_labs+1
  2523     0345  0972               	comf	labs@a+2,w
  2524     0346  00F2               	movwf	?_labs+2
  2525     0347  0973               	comf	labs@a+3,w
  2526     0348  00F3               	movwf	?_labs+3
  2527     0349  0AF0               	incf	?_labs,f
  2528     034A  1903               	skipnz
  2529     034B  0AF1               	incf	?_labs+1,f
  2530     034C  1903               	skipnz
  2531     034D  0AF2               	incf	?_labs+2,f
  2532     034E  1903               	skipnz
  2533     034F  0AF3               	incf	?_labs+3,f
  2534     0350                     l808:
  2535     0350  0008               	return
  2536     0351                     __end_of_labs:
  2537                           
  2538                           	psect	text9
  2539     0329                     __ptext9:	
  2540 ;; *************** function ___bmul *****************
  2541 ;; Defined at:
  2542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  multiplier      1    wreg     unsigned char 
  2545 ;;  multiplicand    1    0[COMMON] unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  multiplier      1    2[COMMON] unsigned char 
  2548 ;;  product         1    1[COMMON] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      unsigned char 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2558 ;;      Params:         1       0       0       0       0       0       0
  2559 ;;      Locals:         2       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0
  2561 ;;      Totals:         3       0       0       0       0       0       0
  2562 ;;Total ram usage:        3 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_lcd_PrintDigitInt32
  2568 ;;		_lcd_PrintInt32
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572     0329                     ___bmul:	
  2573                           ;psect for function ___bmul
  2574                           
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2578                           ;___bmul@multiplier stored from wreg
  2579     0329  00F2               	movwf	___bmul@multiplier
  2580     032A                     l1278:
  2581     032A  01F1               	clrf	___bmul@product
  2582     032B                     l1280:
  2583     032B  1C72               	btfss	___bmul@multiplier,0
  2584     032C  2B2E               	goto	u601
  2585     032D  2B2F               	goto	u600
  2586     032E                     u601:
  2587     032E  2B31               	goto	l1284
  2588     032F                     u600:
  2589     032F                     l1282:
  2590     032F  0870               	movf	___bmul@multiplicand,w
  2591     0330  07F1               	addwf	___bmul@product,f
  2592     0331                     l1284:
  2593     0331  1003               	clrc
  2594     0332  0DF0               	rlf	___bmul@multiplicand,f
  2595     0333                     l1286:
  2596     0333  1003               	clrc
  2597     0334  0CF2               	rrf	___bmul@multiplier,f
  2598     0335  0872               	movf	___bmul@multiplier,w
  2599     0336  1D03               	btfss	3,2
  2600     0337  2B39               	goto	u611
  2601     0338  2B3A               	goto	u610
  2602     0339                     u611:
  2603     0339  2B2B               	goto	l1280
  2604     033A                     u610:
  2605     033A                     l1288:
  2606     033A  0871               	movf	___bmul@product,w
  2607     033B                     l371:
  2608     033B  0008               	return
  2609     033C                     __end_of___bmul:
  2610                           
  2611                           	psect	text10
  2612     0501                     __ptext10:	
  2613 ;; *************** function ___aldiv *****************
  2614 ;; Defined at:
  2615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  divisor         4    0[COMMON] long 
  2618 ;;  dividend        4    4[COMMON] long 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  quotient        4   10[COMMON] long 
  2621 ;;  sign            1    9[COMMON] unsigned char 
  2622 ;;  counter         1    8[COMMON] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  4    0[COMMON] long 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         8       0       0       0       0       0       0
  2633 ;;      Locals:         6       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0
  2635 ;;      Totals:        14       0       0       0       0       0       0
  2636 ;;Total ram usage:       14 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_lcd_PrintDigitInt32
  2642 ;;		_lcd_PrintInt32
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646     0501                     ___aldiv:	
  2647                           ;psect for function ___aldiv
  2648                           
  2649     0501                     l1292:	
  2650                           ;incstack = 0
  2651                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2652                           
  2653     0501  01F9               	clrf	___aldiv@sign
  2654     0502                     l1294:
  2655     0502  1FF3               	btfss	___aldiv@divisor+3,7
  2656     0503  2D05               	goto	u621
  2657     0504  2D06               	goto	u620
  2658     0505                     u621:
  2659     0505  2D13               	goto	l410
  2660     0506                     u620:
  2661     0506                     l1296:
  2662     0506  09F0               	comf	___aldiv@divisor,f
  2663     0507  09F1               	comf	___aldiv@divisor+1,f
  2664     0508  09F2               	comf	___aldiv@divisor+2,f
  2665     0509  09F3               	comf	___aldiv@divisor+3,f
  2666     050A  0AF0               	incf	___aldiv@divisor,f
  2667     050B  1903               	skipnz
  2668     050C  0AF1               	incf	___aldiv@divisor+1,f
  2669     050D  1903               	skipnz
  2670     050E  0AF2               	incf	___aldiv@divisor+2,f
  2671     050F  1903               	skipnz
  2672     0510  0AF3               	incf	___aldiv@divisor+3,f
  2673     0511  3001               	movlw	1
  2674     0512  00F9               	movwf	___aldiv@sign
  2675     0513                     l410:
  2676     0513  1FF7               	btfss	___aldiv@dividend+3,7
  2677     0514  2D16               	goto	u631
  2678     0515  2D17               	goto	u630
  2679     0516                     u631:
  2680     0516  2D24               	goto	l1302
  2681     0517                     u630:
  2682     0517                     l1298:
  2683     0517  09F4               	comf	___aldiv@dividend,f
  2684     0518  09F5               	comf	___aldiv@dividend+1,f
  2685     0519  09F6               	comf	___aldiv@dividend+2,f
  2686     051A  09F7               	comf	___aldiv@dividend+3,f
  2687     051B  0AF4               	incf	___aldiv@dividend,f
  2688     051C  1903               	skipnz
  2689     051D  0AF5               	incf	___aldiv@dividend+1,f
  2690     051E  1903               	skipnz
  2691     051F  0AF6               	incf	___aldiv@dividend+2,f
  2692     0520  1903               	skipnz
  2693     0521  0AF7               	incf	___aldiv@dividend+3,f
  2694     0522                     l1300:
  2695     0522  3001               	movlw	1
  2696     0523  06F9               	xorwf	___aldiv@sign,f
  2697     0524                     l1302:
  2698     0524  3000               	movlw	0
  2699     0525  00FD               	movwf	___aldiv@quotient+3
  2700     0526  3000               	movlw	0
  2701     0527  00FC               	movwf	___aldiv@quotient+2
  2702     0528  3000               	movlw	0
  2703     0529  00FB               	movwf	___aldiv@quotient+1
  2704     052A  3000               	movlw	0
  2705     052B  00FA               	movwf	___aldiv@quotient
  2706     052C                     l1304:
  2707     052C  0873               	movf	___aldiv@divisor+3,w
  2708     052D  0472               	iorwf	___aldiv@divisor+2,w
  2709     052E  0471               	iorwf	___aldiv@divisor+1,w
  2710     052F  0470               	iorwf	___aldiv@divisor,w
  2711     0530  1903               	skipnz
  2712     0531  2D33               	goto	u641
  2713     0532  2D34               	goto	u640
  2714     0533                     u641:
  2715     0533  2D73               	goto	l1324
  2716     0534                     u640:
  2717     0534                     l1306:
  2718     0534  3001               	movlw	1
  2719     0535  00F8               	movwf	___aldiv@counter
  2720     0536  2D40               	goto	l1310
  2721     0537                     l1308:
  2722     0537  3001               	movlw	1
  2723     0538                     u655:
  2724     0538  35F0               	lslf	___aldiv@divisor,f
  2725     0539  0DF1               	rlf	___aldiv@divisor+1,f
  2726     053A  0DF2               	rlf	___aldiv@divisor+2,f
  2727     053B  0DF3               	rlf	___aldiv@divisor+3,f
  2728     053C  0B89               	decfsz	9,f
  2729     053D  2D38               	goto	u655
  2730     053E  3001               	movlw	1
  2731     053F  07F8               	addwf	___aldiv@counter,f
  2732     0540                     l1310:
  2733     0540  1FF3               	btfss	___aldiv@divisor+3,7
  2734     0541  2D43               	goto	u661
  2735     0542  2D44               	goto	u660
  2736     0543                     u661:
  2737     0543  2D37               	goto	l1308
  2738     0544                     u660:
  2739     0544                     l1312:
  2740     0544  3001               	movlw	1
  2741     0545                     u675:
  2742     0545  35FA               	lslf	___aldiv@quotient,f
  2743     0546  0DFB               	rlf	___aldiv@quotient+1,f
  2744     0547  0DFC               	rlf	___aldiv@quotient+2,f
  2745     0548  0DFD               	rlf	___aldiv@quotient+3,f
  2746     0549  0B89               	decfsz	9,f
  2747     054A  2D45               	goto	u675
  2748     054B                     l1314:
  2749     054B  0873               	movf	___aldiv@divisor+3,w
  2750     054C  0277               	subwf	___aldiv@dividend+3,w
  2751     054D  1D03               	skipz
  2752     054E  2D59               	goto	u685
  2753     054F  0872               	movf	___aldiv@divisor+2,w
  2754     0550  0276               	subwf	___aldiv@dividend+2,w
  2755     0551  1D03               	skipz
  2756     0552  2D59               	goto	u685
  2757     0553  0871               	movf	___aldiv@divisor+1,w
  2758     0554  0275               	subwf	___aldiv@dividend+1,w
  2759     0555  1D03               	skipz
  2760     0556  2D59               	goto	u685
  2761     0557  0870               	movf	___aldiv@divisor,w
  2762     0558  0274               	subwf	___aldiv@dividend,w
  2763     0559                     u685:
  2764     0559  1C03               	skipc
  2765     055A  2D5C               	goto	u681
  2766     055B  2D5D               	goto	u680
  2767     055C                     u681:
  2768     055C  2D66               	goto	l1320
  2769     055D                     u680:
  2770     055D                     l1316:
  2771     055D  0870               	movf	___aldiv@divisor,w
  2772     055E  02F4               	subwf	___aldiv@dividend,f
  2773     055F  0871               	movf	___aldiv@divisor+1,w
  2774     0560  3BF5               	subwfb	___aldiv@dividend+1,f
  2775     0561  0872               	movf	___aldiv@divisor+2,w
  2776     0562  3BF6               	subwfb	___aldiv@dividend+2,f
  2777     0563  0873               	movf	___aldiv@divisor+3,w
  2778     0564  3BF7               	subwfb	___aldiv@dividend+3,f
  2779     0565                     l1318:
  2780     0565  147A               	bsf	___aldiv@quotient,0
  2781     0566                     l1320:
  2782     0566  3001               	movlw	1
  2783     0567                     u695:
  2784     0567  36F3               	lsrf	___aldiv@divisor+3,f
  2785     0568  0CF2               	rrf	___aldiv@divisor+2,f
  2786     0569  0CF1               	rrf	___aldiv@divisor+1,f
  2787     056A  0CF0               	rrf	___aldiv@divisor,f
  2788     056B  0B89               	decfsz	9,f
  2789     056C  2D67               	goto	u695
  2790     056D                     l1322:
  2791     056D  3001               	movlw	1
  2792     056E  02F8               	subwf	___aldiv@counter,f
  2793     056F  1D03               	btfss	3,2
  2794     0570  2D72               	goto	u701
  2795     0571  2D73               	goto	u700
  2796     0572                     u701:
  2797     0572  2D44               	goto	l1312
  2798     0573                     u700:
  2799     0573                     l1324:
  2800     0573  0879               	movf	___aldiv@sign,w
  2801     0574  1903               	btfsc	3,2
  2802     0575  2D77               	goto	u711
  2803     0576  2D78               	goto	u710
  2804     0577                     u711:
  2805     0577  2D83               	goto	l1328
  2806     0578                     u710:
  2807     0578                     l1326:
  2808     0578  09FA               	comf	___aldiv@quotient,f
  2809     0579  09FB               	comf	___aldiv@quotient+1,f
  2810     057A  09FC               	comf	___aldiv@quotient+2,f
  2811     057B  09FD               	comf	___aldiv@quotient+3,f
  2812     057C  0AFA               	incf	___aldiv@quotient,f
  2813     057D  1903               	skipnz
  2814     057E  0AFB               	incf	___aldiv@quotient+1,f
  2815     057F  1903               	skipnz
  2816     0580  0AFC               	incf	___aldiv@quotient+2,f
  2817     0581  1903               	skipnz
  2818     0582  0AFD               	incf	___aldiv@quotient+3,f
  2819     0583                     l1328:
  2820     0583  087D               	movf	___aldiv@quotient+3,w
  2821     0584  00F3               	movwf	?___aldiv+3
  2822     0585  087C               	movf	___aldiv@quotient+2,w
  2823     0586  00F2               	movwf	?___aldiv+2
  2824     0587  087B               	movf	___aldiv@quotient+1,w
  2825     0588  00F1               	movwf	?___aldiv+1
  2826     0589  087A               	movf	___aldiv@quotient,w
  2827     058A  00F0               	movwf	?___aldiv
  2828     058B                     l420:
  2829     058B  0008               	return
  2830     058C                     __end_of___aldiv:
  2831                           
  2832                           	psect	text11
  2833     03AC                     __ptext11:	
  2834 ;; *************** function _lcd_Goto *****************
  2835 ;; Defined at:
  2836 ;;		line 238 in file "program.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  y               1    wreg     unsigned char 
  2839 ;;  x               1    6[COMMON] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  y               1    7[COMMON] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         1       0       0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         2       0       0       0       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 5
  2858 ;; This function calls:
  2859 ;;		_lcd_PrintCmd
  2860 ;; This function is called by:
  2861 ;;		_programLoop
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865     03AC                     _lcd_Goto:	
  2866                           ;psect for function _lcd_Goto
  2867                           
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2871                           ;lcd_Goto@y stored from wreg
  2872     03AC  00F7               	movwf	lcd_Goto@y
  2873     03AD                     l1340:
  2874                           
  2875                           ;program.c: 239:     switch(y) {
  2876     03AD  2BC0               	goto	l1350
  2877     03AE                     l1342:
  2878                           
  2879                           ;program.c: 241:             lcd_PrintCmd(0x80 + x);
  2880     03AE  0876               	movf	lcd_Goto@x,w
  2881     03AF  3E80               	addlw	128
  2882     03B0  3182  22FA  3183   	fcall	_lcd_PrintCmd
  2883                           
  2884                           ;program.c: 242:             break;
  2885     03B3  2BC8               	goto	l156
  2886     03B4                     l1344:
  2887                           
  2888                           ;program.c: 245:             lcd_PrintCmd(0xC0 + x);
  2889     03B4  0876               	movf	lcd_Goto@x,w
  2890     03B5  3EC0               	addlw	192
  2891     03B6  3182  22FA  3183   	fcall	_lcd_PrintCmd
  2892                           
  2893                           ;program.c: 246:             break;
  2894     03B9  2BC8               	goto	l156
  2895     03BA                     l1346:
  2896                           
  2897                           ;program.c: 249:             lcd_PrintCmd(0x80 + x);
  2898     03BA  0876               	movf	lcd_Goto@x,w
  2899     03BB  3E80               	addlw	128
  2900     03BC  3182  22FA  3183   	fcall	_lcd_PrintCmd
  2901                           
  2902                           ;program.c: 250:             break;
  2903     03BF  2BC8               	goto	l156
  2904     03C0                     l1350:
  2905     03C0  0877               	movf	lcd_Goto@y,w
  2906                           
  2907                           ; Switch size 1, requested type "simple"
  2908                           ; Number of cases is 2, Range of values is 0 to 1
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; simple_byte            7     4 (average)
  2912                           ; direct_byte           10     6 (fixed)
  2913                           ; jumptable            260     6 (fixed)
  2914                           ;	Chosen strategy is simple_byte
  2915     03C1  3A00               	xorlw	0	; case 0
  2916     03C2  1903               	skipnz
  2917     03C3  2BAE               	goto	l1342
  2918     03C4  3A01               	xorlw	1	; case 1
  2919     03C5  1903               	skipnz
  2920     03C6  2BB4               	goto	l1344
  2921     03C7  2BBA               	goto	l1346
  2922     03C8                     l156:
  2923     03C8  0008               	return
  2924     03C9                     __end_of_lcd_Goto:
  2925                           
  2926                           	psect	text12
  2927     0444                     __ptext12:	
  2928 ;; *************** function _programInitialize *****************
  2929 ;; Defined at:
  2930 ;;		line 20 in file "program.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2944 ;;      Params:         0       0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 6
  2951 ;; This function calls:
  2952 ;;		_lcd_Initialize
  2953 ;;		_motor_Initialize
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959     0444                     _programInitialize:	
  2960                           ;psect for function _programInitialize
  2961                           
  2962     0444                     l1414:	
  2963                           ;incstack = 0
  2964                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  2965                           
  2966                           
  2967                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2968     0444  0021               	movlb	1	; select bank1
  2969     0445  130D               	bcf	13,6	;volatile
  2970                           
  2971                           ;program.c: 22:     TRISBbits.TRISB7 = 0;
  2972     0446  138D               	bcf	13,7	;volatile
  2973                           
  2974                           ;program.c: 24:     LATBbits.LATB7 = 0;
  2975     0447  0022               	movlb	2	; select bank2
  2976     0448  138D               	bcf	13,7	;volatile
  2977                           
  2978                           ;program.c: 25:     LATBbits.LATB6 = 0;
  2979     0449  130D               	bcf	13,6	;volatile
  2980                           
  2981                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2982     044A  0021               	movlb	1	; select bank1
  2983     044B  128D               	bcf	13,5	;volatile
  2984                           
  2985                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2986     044C  120D               	bcf	13,4	;volatile
  2987                           
  2988                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2989     044D  118D               	bcf	13,3	;volatile
  2990                           
  2991                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2992     044E  110D               	bcf	13,2	;volatile
  2993                           
  2994                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2995     044F  108D               	bcf	13,1	;volatile
  2996                           
  2997                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2998     0450  128E               	bcf	14,5	;volatile
  2999                           
  3000                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  3001     0451  0023               	movlb	3	; select bank3
  3002     0452  128D               	bcf	13,5	;volatile
  3003                           
  3004                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  3005     0453  120D               	bcf	13,4	;volatile
  3006                           
  3007                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  3008     0454  118D               	bcf	13,3	;volatile
  3009                           
  3010                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  3011     0455  110D               	bcf	13,2	;volatile
  3012                           
  3013                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  3014     0456  108D               	bcf	13,1	;volatile
  3015                           
  3016                           ;program.c: 40:     LATBbits.LATB5 = 0;
  3017     0457  0022               	movlb	2	; select bank2
  3018     0458  128D               	bcf	13,5	;volatile
  3019                           
  3020                           ;program.c: 41:     LATBbits.LATB4 = 0;
  3021     0459  120D               	bcf	13,4	;volatile
  3022                           
  3023                           ;program.c: 42:     LATBbits.LATB3 = 0;
  3024     045A  118D               	bcf	13,3	;volatile
  3025                           
  3026                           ;program.c: 43:     LATBbits.LATB2 = 0;
  3027     045B  110D               	bcf	13,2	;volatile
  3028                           
  3029                           ;program.c: 44:     LATBbits.LATB1 = 0;
  3030     045C  108D               	bcf	13,1	;volatile
  3031                           
  3032                           ;program.c: 45:     LATCbits.LATC5 = 0;
  3033     045D  128E               	bcf	14,5	;volatile
  3034                           
  3035                           ;program.c: 47:     TRISAbits.TRISA1 = 1;
  3036     045E  0021               	movlb	1	; select bank1
  3037     045F  148C               	bsf	12,1	;volatile
  3038                           
  3039                           ;program.c: 48:     TRISAbits.TRISA2 = 1;
  3040     0460  150C               	bsf	12,2	;volatile
  3041                           
  3042                           ;program.c: 49:     TRISAbits.TRISA3 = 1;
  3043     0461  158C               	bsf	12,3	;volatile
  3044                           
  3045                           ;program.c: 50:     TRISAbits.TRISA4 = 1;
  3046     0462  160C               	bsf	12,4	;volatile
  3047                           
  3048                           ;program.c: 52:     ANSELAbits.ANSA1 = 0;
  3049     0463  0023               	movlb	3	; select bank3
  3050     0464  108C               	bcf	12,1	;volatile
  3051                           
  3052                           ;program.c: 53:     ANSELAbits.ANSA2 = 0;
  3053     0465  110C               	bcf	12,2	;volatile
  3054                           
  3055                           ;program.c: 54:     ANSELAbits.ANSA3 = 0;
  3056     0466  118C               	bcf	12,3	;volatile
  3057                           
  3058                           ;program.c: 55:     ANSELAbits.ANSA4 = 0;
  3059     0467  120C               	bcf	12,4	;volatile
  3060                           
  3061                           ;program.c: 58:     TRISBbits.TRISB0 = 0;
  3062     0468  0021               	movlb	1	; select bank1
  3063     0469  100D               	bcf	13,0	;volatile
  3064                           
  3065                           ;program.c: 59:     ANSELBbits.ANSB0 = 0;
  3066     046A  0023               	movlb	3	; select bank3
  3067     046B  100D               	bcf	13,0	;volatile
  3068                           
  3069                           ;program.c: 60:     LATBbits.LATB0 = 0;
  3070     046C  0022               	movlb	2	; select bank2
  3071     046D  100D               	bcf	13,0	;volatile
  3072                           
  3073                           ;program.c: 63:     TRISCbits.TRISC1 = 0;
  3074     046E  0021               	movlb	1	; select bank1
  3075     046F  108E               	bcf	14,1	;volatile
  3076                           
  3077                           ;program.c: 64:     LATCbits.LATC1 = 0;
  3078     0470  0022               	movlb	2	; select bank2
  3079     0471  108E               	bcf	14,1	;volatile
  3080     0472                     l1416:
  3081                           
  3082                           ;program.c: 66:     lcd_Initialize();
  3083     0472  3184  2411  3184   	fcall	_lcd_Initialize
  3084                           
  3085                           ;program.c: 68:     motor_Initialize();
  3086     0475  3183  2367  3184   	fcall	_motor_Initialize
  3087     0478                     l99:
  3088     0478  0008               	return
  3089     0479                     __end_of_programInitialize:
  3090                           
  3091                           	psect	text13
  3092     0367                     __ptext13:	
  3093 ;; *************** function _motor_Initialize *****************
  3094 ;; Defined at:
  3095 ;;		line 341 in file "program.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3109 ;;      Params:         0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_programInitialize
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122     0367                     _motor_Initialize:	
  3123                           ;psect for function _motor_Initialize
  3124                           
  3125     0367                     l952:	
  3126                           ;incstack = 0
  3127                           ; Regs used in _motor_Initialize: [wreg+status,2+status,0]
  3128                           
  3129                           
  3130                           ;program.c: 345:     PSMC1CONbits.PSMC1EN = 1;
  3131     0367  0030               	movlb	16	; select bank16
  3132     0368  1791               	bsf	17,7	;volatile
  3133     0369                     l954:
  3134                           
  3135                           ;program.c: 346:     PSMC1CONbits.P1MODE = 1;
  3136     0369  0811               	movf	17,w	;volatile
  3137     036A  39F0               	andlw	-16
  3138     036B  3801               	iorlw	1
  3139     036C  0091               	movwf	17	;volatile
  3140                           
  3141                           ;program.c: 349:     PSMC1CLKbits.P1CPRE = 0;
  3142     036D  30CF               	movlw	-49
  3143     036E  0594               	andwf	20,f	;volatile
  3144                           
  3145                           ;program.c: 350:     PSMC1CLKbits.P1CSRC = 0;
  3146     036F  30FC               	movlw	-4
  3147     0370  0594               	andwf	20,f	;volatile
  3148     0371                     l956:
  3149                           
  3150                           ;program.c: 352:     PSMC1OENbits.P1OEB = 1;
  3151     0371  1495               	bsf	21,1	;volatile
  3152     0372                     l958:
  3153                           
  3154                           ;program.c: 353:     PSMC1POLbits.P1POLB = 1;
  3155     0372  1496               	bsf	22,1	;volatile
  3156     0373                     l960:
  3157                           
  3158                           ;program.c: 355:     PSMC1PHSbits.P1PHST = 1;
  3159     0373  141A               	bsf	26,0	;volatile
  3160     0374                     l962:
  3161                           
  3162                           ;program.c: 356:     PSMC1DCSbits.P1DCST = 1;
  3163     0374  141B               	bsf	27,0	;volatile
  3164     0375                     l964:
  3165                           
  3166                           ;program.c: 357:     PSMC1PRSbits.P1PRST = 1;
  3167     0375  141C               	bsf	28,0	;volatile
  3168     0376                     l966:
  3169                           
  3170                           ;program.c: 359:     PSMC1STR0bits.P1STRB = 1;
  3171     0376  14AE               	bsf	46,1	;volatile
  3172     0377                     l968:
  3173                           
  3174                           ;program.c: 362:     PSMC1PHH = 0;
  3175     0377  01A2               	clrf	34	;volatile
  3176     0378                     l970:
  3177                           
  3178                           ;program.c: 363:     PSMC1PHL = 0;
  3179     0378  01A1               	clrf	33	;volatile
  3180     0379                     l972:
  3181                           
  3182                           ;program.c: 366:     PSMC1PRH = 0xFF;
  3183     0379  30FF               	movlw	255
  3184     037A  00A6               	movwf	38	;volatile
  3185     037B                     l974:
  3186                           
  3187                           ;program.c: 367:     PSMC1PRL = 0xFF;
  3188     037B  30FF               	movlw	255
  3189     037C  00A5               	movwf	37	;volatile
  3190     037D                     l192:
  3191     037D  0008               	return
  3192     037E                     __end_of_motor_Initialize:
  3193                           
  3194                           	psect	text14
  3195     0411                     __ptext14:	
  3196 ;; *************** function _lcd_Initialize *****************
  3197 ;; Defined at:
  3198 ;;		line 213 in file "program.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3212 ;;      Params:         0       0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 5
  3219 ;; This function calls:
  3220 ;;		_delay_ms
  3221 ;;		_delay_x24o25us
  3222 ;;		_lcd_PrintCmd
  3223 ;; This function is called by:
  3224 ;;		_programInitialize
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228     0411                     _lcd_Initialize:	
  3229                           ;psect for function _lcd_Initialize
  3230                           
  3231     0411                     l1332:	
  3232                           ;incstack = 0
  3233                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3234                           
  3235                           
  3236                           ;program.c: 214:     delay_ms(10);
  3237     0411  3000               	movlw	0
  3238     0412  00F9               	movwf	delay_ms@delay+3
  3239     0413  3000               	movlw	0
  3240     0414  00F8               	movwf	delay_ms@delay+2
  3241     0415  3000               	movlw	0
  3242     0416  00F7               	movwf	delay_ms@delay+1
  3243     0417  300A               	movlw	10
  3244     0418  00F6               	movwf	delay_ms@delay
  3245     0419  3183  23E8  3184   	fcall	_delay_ms
  3246                           
  3247                           ;program.c: 217:     lcd_PrintCmd(0x33);
  3248     041C  3033               	movlw	51
  3249     041D  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3250                           
  3251                           ;program.c: 218:     lcd_PrintCmd(0x32);
  3252     0420  3032               	movlw	50
  3253     0421  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3254                           
  3255                           ;program.c: 221:     lcd_PrintCmd(0x28);
  3256     0424  3028               	movlw	40
  3257     0425  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3258                           
  3259                           ;program.c: 222:     lcd_PrintCmd(0x02);
  3260     0428  3002               	movlw	2
  3261     0429  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3262                           
  3263                           ;program.c: 223:     lcd_PrintCmd(0x0C);
  3264     042C  300C               	movlw	12
  3265     042D  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3266                           
  3267                           ;program.c: 224:     lcd_PrintCmd(0x06);
  3268     0430  3006               	movlw	6
  3269     0431  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3270                           
  3271                           ;program.c: 225:     lcd_PrintCmd(0x01);
  3272     0434  3001               	movlw	1
  3273     0435  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3274                           
  3275                           ;program.c: 226:     lcd_PrintCmd(0x80);
  3276     0438  3080               	movlw	128
  3277     0439  3182  22FA  3184   	fcall	_lcd_PrintCmd
  3278                           
  3279                           ;program.c: 228:     delay_x24o25us(63);
  3280     043C  303F               	movlw	63
  3281     043D  00F2               	movwf	delay_x24o25us@delay
  3282     043E  3000               	movlw	0
  3283     043F  00F3               	movwf	delay_x24o25us@delay+1
  3284     0440  3183  2351  3184   	fcall	_delay_x24o25us
  3285     0443                     l145:
  3286     0443  0008               	return
  3287     0444                     __end_of_lcd_Initialize:
  3288                           
  3289                           	psect	text15
  3290     02FA                     __ptext15:	
  3291 ;; *************** function _lcd_PrintCmd *****************
  3292 ;; Defined at:
  3293 ;;		line 206 in file "program.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  command         1    wreg     unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  command         1    5[COMMON] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3307 ;;      Params:         0       0       0       0       0       0       0
  3308 ;;      Locals:         1       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0
  3310 ;;      Totals:         1       0       0       0       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 4
  3314 ;; This function calls:
  3315 ;;		_lcd_DelaySetupTime
  3316 ;;		_lcd_WriteData
  3317 ;; This function is called by:
  3318 ;;		_lcd_Initialize
  3319 ;;		_lcd_Goto
  3320 ;;		_lcd_ClearAll
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324     02FA                     _lcd_PrintCmd:	
  3325                           ;psect for function _lcd_PrintCmd
  3326                           
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  3330                           ;lcd_PrintCmd@command stored from wreg
  3331     02FA  00F5               	movwf	lcd_PrintCmd@command
  3332     02FB                     l1258:
  3333                           
  3334                           ;program.c: 207:     LATBbits.LATB5 = 0;
  3335     02FB  0022               	movlb	2	; select bank2
  3336     02FC  128D               	bcf	13,5	;volatile
  3337     02FD                     l1260:
  3338                           
  3339                           ;program.c: 208:     lcd_DelaySetupTime();
  3340     02FD  3182  22DE  3182   	fcall	_lcd_DelaySetupTime
  3341                           
  3342                           ;program.c: 210:     lcd_WriteData(command);
  3343     0300  0875               	movf	lcd_PrintCmd@command,w
  3344     0301  3184  2479  3182   	fcall	_lcd_WriteData
  3345     0304                     l142:
  3346     0304  0008               	return
  3347     0305                     __end_of_lcd_PrintCmd:
  3348                           
  3349                           	psect	text16
  3350     0479                     __ptext16:	
  3351 ;; *************** function _lcd_WriteData *****************
  3352 ;; Defined at:
  3353 ;;		line 185 in file "program.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  data            1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  data            1    4[COMMON] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3367 ;;      Params:         0       0       0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0       0       0
  3369 ;;      Temps:          2       0       0       0       0       0       0
  3370 ;;      Totals:         3       0       0       0       0       0       0
  3371 ;;Total ram usage:        3 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 3
  3374 ;; This function calls:
  3375 ;;		_delay_x1o5us
  3376 ;;		_lcd_EPulse
  3377 ;; This function is called by:
  3378 ;;		_lcd_PrintCmd
  3379 ;;		_lcd_PrintChar
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383     0479                     _lcd_WriteData:	
  3384                           ;psect for function _lcd_WriteData
  3385                           
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  3389                           ;lcd_WriteData@data stored from wreg
  3390     0479  00F4               	movwf	lcd_WriteData@data
  3391     047A                     l1214:
  3392                           
  3393                           ;program.c: 187:     LATCbits.LATC5 = (data >> 7) & 0x01;
  3394     047A  0874               	movf	lcd_WriteData@data,w
  3395     047B  00F2               	movwf	??_lcd_WriteData
  3396     047C  3007               	movlw	7
  3397     047D                     u485:
  3398     047D  36F2               	lsrf	??_lcd_WriteData,f
  3399     047E  0B89               	decfsz	9,f
  3400     047F  2C7D               	goto	u485
  3401     0480  0872               	movf	??_lcd_WriteData,w
  3402     0481  3901               	andlw	1
  3403     0482  00F3               	movwf	??_lcd_WriteData+1
  3404     0483  0EF3               	swapf	??_lcd_WriteData+1,f
  3405     0484  0DF3               	rlf	??_lcd_WriteData+1,f
  3406     0485  0022               	movlb	2	; select bank2
  3407     0486  080E               	movf	14,w	;volatile
  3408     0487  0673               	xorwf	??_lcd_WriteData+1,w
  3409     0488  39DF               	andlw	-33
  3410     0489  0673               	xorwf	??_lcd_WriteData+1,w
  3411     048A  008E               	movwf	14	;volatile
  3412                           
  3413                           ;program.c: 188:     LATBbits.LATB1 = (data >> 6) & 0x01;
  3414     048B  0874               	movf	lcd_WriteData@data,w
  3415     048C  00F2               	movwf	??_lcd_WriteData
  3416     048D  3006               	movlw	6
  3417     048E                     u495:
  3418     048E  36F2               	lsrf	??_lcd_WriteData,f
  3419     048F  0B89               	decfsz	9,f
  3420     0490  2C8E               	goto	u495
  3421     0491  0872               	movf	??_lcd_WriteData,w
  3422     0492  3901               	andlw	1
  3423     0493  00F3               	movwf	??_lcd_WriteData+1
  3424     0494  0DF3               	rlf	??_lcd_WriteData+1,f
  3425     0495  080D               	movf	13,w	;volatile
  3426     0496  0673               	xorwf	??_lcd_WriteData+1,w
  3427     0497  39FD               	andlw	-3
  3428     0498  0673               	xorwf	??_lcd_WriteData+1,w
  3429     0499  008D               	movwf	13	;volatile
  3430                           
  3431                           ;program.c: 189:     LATBbits.LATB2 = (data >> 5) & 0x01;
  3432     049A  0874               	movf	lcd_WriteData@data,w
  3433     049B  00F2               	movwf	??_lcd_WriteData
  3434     049C  3005               	movlw	5
  3435     049D                     u505:
  3436     049D  36F2               	lsrf	??_lcd_WriteData,f
  3437     049E  0B89               	decfsz	9,f
  3438     049F  2C9D               	goto	u505
  3439     04A0  0872               	movf	??_lcd_WriteData,w
  3440     04A1  3901               	andlw	1
  3441     04A2  00F3               	movwf	??_lcd_WriteData+1
  3442     04A3  0DF3               	rlf	??_lcd_WriteData+1,f
  3443     04A4  0DF3               	rlf	??_lcd_WriteData+1,f
  3444     04A5  080D               	movf	13,w	;volatile
  3445     04A6  0673               	xorwf	??_lcd_WriteData+1,w
  3446     04A7  39FB               	andlw	-5
  3447     04A8  0673               	xorwf	??_lcd_WriteData+1,w
  3448     04A9  008D               	movwf	13	;volatile
  3449                           
  3450                           ;program.c: 190:     LATBbits.LATB3 = (data >> 4) & 0x01;
  3451     04AA  0874               	movf	lcd_WriteData@data,w
  3452     04AB  00F2               	movwf	??_lcd_WriteData
  3453     04AC  3004               	movlw	4
  3454     04AD                     u515:
  3455     04AD  36F2               	lsrf	??_lcd_WriteData,f
  3456     04AE  0B89               	decfsz	9,f
  3457     04AF  2CAD               	goto	u515
  3458     04B0  0872               	movf	??_lcd_WriteData,w
  3459     04B1  3901               	andlw	1
  3460     04B2  00F3               	movwf	??_lcd_WriteData+1
  3461     04B3  0DF3               	rlf	??_lcd_WriteData+1,f
  3462     04B4  0DF3               	rlf	??_lcd_WriteData+1,f
  3463     04B5  0DF3               	rlf	??_lcd_WriteData+1,f
  3464     04B6  080D               	movf	13,w	;volatile
  3465     04B7  0673               	xorwf	??_lcd_WriteData+1,w
  3466     04B8  39F7               	andlw	-9
  3467     04B9  0673               	xorwf	??_lcd_WriteData+1,w
  3468     04BA  008D               	movwf	13	;volatile
  3469     04BB                     l1216:
  3470                           
  3471                           ;program.c: 192:     lcd_EPulse();
  3472     04BB  3182  22EF  3184   	fcall	_lcd_EPulse
  3473     04BE                     l1218:
  3474                           
  3475                           ;program.c: 195:     LATCbits.LATC5 = (data >> 3) & 0x01;
  3476     04BE  0874               	movf	lcd_WriteData@data,w
  3477     04BF  00F2               	movwf	??_lcd_WriteData
  3478     04C0  3003               	movlw	3
  3479     04C1                     u525:
  3480     04C1  36F2               	lsrf	??_lcd_WriteData,f
  3481     04C2  0B89               	decfsz	9,f
  3482     04C3  2CC1               	goto	u525
  3483     04C4  0872               	movf	??_lcd_WriteData,w
  3484     04C5  3901               	andlw	1
  3485     04C6  00F3               	movwf	??_lcd_WriteData+1
  3486     04C7  0EF3               	swapf	??_lcd_WriteData+1,f
  3487     04C8  0DF3               	rlf	??_lcd_WriteData+1,f
  3488     04C9  0022               	movlb	2	; select bank2
  3489     04CA  080E               	movf	14,w	;volatile
  3490     04CB  0673               	xorwf	??_lcd_WriteData+1,w
  3491     04CC  39DF               	andlw	-33
  3492     04CD  0673               	xorwf	??_lcd_WriteData+1,w
  3493     04CE  008E               	movwf	14	;volatile
  3494     04CF                     l1220:
  3495                           
  3496                           ;program.c: 196:     LATBbits.LATB1 = (data >> 2) & 0x01;
  3497     04CF  0874               	movf	lcd_WriteData@data,w
  3498     04D0  00F2               	movwf	??_lcd_WriteData
  3499     04D1  3002               	movlw	2
  3500     04D2                     u535:
  3501     04D2  36F2               	lsrf	??_lcd_WriteData,f
  3502     04D3  0B89               	decfsz	9,f
  3503     04D4  2CD2               	goto	u535
  3504     04D5  0872               	movf	??_lcd_WriteData,w
  3505     04D6  3901               	andlw	1
  3506     04D7  00F3               	movwf	??_lcd_WriteData+1
  3507     04D8  0DF3               	rlf	??_lcd_WriteData+1,f
  3508     04D9  080D               	movf	13,w	;volatile
  3509     04DA  0673               	xorwf	??_lcd_WriteData+1,w
  3510     04DB  39FD               	andlw	-3
  3511     04DC  0673               	xorwf	??_lcd_WriteData+1,w
  3512     04DD  008D               	movwf	13	;volatile
  3513     04DE                     l1222:
  3514                           
  3515                           ;program.c: 197:     LATBbits.LATB2 = (data >> 1) & 0x01;
  3516     04DE  0874               	movf	lcd_WriteData@data,w
  3517     04DF  00F2               	movwf	??_lcd_WriteData
  3518     04E0  3001               	movlw	1
  3519     04E1                     u545:
  3520     04E1  36F2               	lsrf	??_lcd_WriteData,f
  3521     04E2  0B89               	decfsz	9,f
  3522     04E3  2CE1               	goto	u545
  3523     04E4  0872               	movf	??_lcd_WriteData,w
  3524     04E5  3901               	andlw	1
  3525     04E6  00F3               	movwf	??_lcd_WriteData+1
  3526     04E7  0DF3               	rlf	??_lcd_WriteData+1,f
  3527     04E8  0DF3               	rlf	??_lcd_WriteData+1,f
  3528     04E9  080D               	movf	13,w	;volatile
  3529     04EA  0673               	xorwf	??_lcd_WriteData+1,w
  3530     04EB  39FB               	andlw	-5
  3531     04EC  0673               	xorwf	??_lcd_WriteData+1,w
  3532     04ED  008D               	movwf	13	;volatile
  3533     04EE                     l1224:
  3534                           
  3535                           ;program.c: 198:     LATBbits.LATB3 = data & 0x01;
  3536     04EE  0874               	movf	lcd_WriteData@data,w
  3537     04EF  3901               	andlw	1
  3538     04F0  00F2               	movwf	??_lcd_WriteData
  3539     04F1  0DF2               	rlf	??_lcd_WriteData,f
  3540     04F2  0DF2               	rlf	??_lcd_WriteData,f
  3541     04F3  0DF2               	rlf	??_lcd_WriteData,f
  3542     04F4  080D               	movf	13,w	;volatile
  3543     04F5  0672               	xorwf	??_lcd_WriteData,w
  3544     04F6  39F7               	andlw	-9
  3545     04F7  0672               	xorwf	??_lcd_WriteData,w
  3546     04F8  008D               	movwf	13	;volatile
  3547     04F9                     l1226:
  3548                           
  3549                           ;program.c: 200:     lcd_EPulse();
  3550     04F9  3182  22EF  3184   	fcall	_lcd_EPulse
  3551     04FC                     l1228:
  3552                           
  3553                           ;program.c: 202:     delay_x1o5us(25);
  3554     04FC  3019               	movlw	25
  3555     04FD  3183  231C  3184   	fcall	_delay_x1o5us
  3556     0500                     l139:
  3557     0500  0008               	return
  3558     0501                     __end_of_lcd_WriteData:
  3559                           
  3560                           	psect	text17
  3561     02EF                     __ptext17:	
  3562 ;; *************** function _lcd_EPulse *****************
  3563 ;; Defined at:
  3564 ;;		line 177 in file "program.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3578 ;;      Params:         0       0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 2
  3585 ;; This function calls:
  3586 ;;		_lcd_DelayPulse
  3587 ;; This function is called by:
  3588 ;;		_lcd_WriteData
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592     02EF                     _lcd_EPulse:	
  3593                           ;psect for function _lcd_EPulse
  3594                           
  3595     02EF                     l1206:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;program.c: 178:     LATBbits.LATB4 = 1;
  3601     02EF  0022               	movlb	2	; select bank2
  3602     02F0  160D               	bsf	13,4	;volatile
  3603     02F1                     l1208:
  3604                           
  3605                           ;program.c: 179:     lcd_DelayPulse();
  3606     02F1  3182  22E3  3182   	fcall	_lcd_DelayPulse
  3607     02F4                     l1210:
  3608                           
  3609                           ;program.c: 181:     LATBbits.LATB4 = 0;
  3610     02F4  0022               	movlb	2	; select bank2
  3611     02F5  120D               	bcf	13,4	;volatile
  3612                           
  3613                           ;program.c: 182:     lcd_DelayPulse();
  3614     02F6  3182  22E3  3182   	fcall	_lcd_DelayPulse
  3615     02F9                     l136:
  3616     02F9  0008               	return
  3617     02FA                     __end_of_lcd_EPulse:
  3618                           
  3619                           	psect	text18
  3620     02E3                     __ptext18:	
  3621 ;; *************** function _lcd_DelayPulse *****************
  3622 ;; Defined at:
  3623 ;;		line 172 in file "program.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3637 ;;      Params:         0       0       0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 1
  3644 ;; This function calls:
  3645 ;;		_delay_x1o5us
  3646 ;; This function is called by:
  3647 ;;		_lcd_EPulse
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651     02E3                     _lcd_DelayPulse:	
  3652                           ;psect for function _lcd_DelayPulse
  3653                           
  3654     02E3                     l1204:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3657                           
  3658                           
  3659                           ;program.c: 174:     delay_x1o5us(200);
  3660     02E3  30C8               	movlw	200
  3661     02E4  3183  231C  3182   	fcall	_delay_x1o5us
  3662     02E7                     l133:
  3663     02E7  0008               	return
  3664     02E8                     __end_of_lcd_DelayPulse:
  3665                           
  3666                           	psect	text19
  3667     02DE                     __ptext19:	
  3668 ;; *************** function _lcd_DelaySetupTime *****************
  3669 ;; Defined at:
  3670 ;;		line 167 in file "program.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3684 ;;      Params:         0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 1
  3691 ;; This function calls:
  3692 ;;		_delay_x1o5us
  3693 ;; This function is called by:
  3694 ;;		_lcd_PrintCmd
  3695 ;;		_lcd_PrintChar
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699     02DE                     _lcd_DelaySetupTime:	
  3700                           ;psect for function _lcd_DelaySetupTime
  3701                           
  3702     02DE                     l1212:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3705                           
  3706                           
  3707                           ;program.c: 169:     delay_x1o5us(200);
  3708     02DE  30C8               	movlw	200
  3709     02DF  3183  231C  3182   	fcall	_delay_x1o5us
  3710     02E2                     l130:
  3711     02E2  0008               	return
  3712     02E3                     __end_of_lcd_DelaySetupTime:
  3713                           
  3714                           	psect	text20
  3715     03E8                     __ptext20:	
  3716 ;; *************** function _delay_ms *****************
  3717 ;; Defined at:
  3718 ;;		line 15 in file "program.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  delay           4    6[COMMON] unsigned long 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  i               4   10[COMMON] unsigned long 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, pclath, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         4       0       0       0       0       0       0
  3733 ;;      Locals:         4       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         8       0       0       0       0       0       0
  3736 ;;Total ram usage:        8 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 2
  3739 ;; This function calls:
  3740 ;;		_delay_x24o25us
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;;		_programLoop
  3744 ;;		_pb_DelayDebounce
  3745 ;;		_lcd_Initialize
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749     03E8                     _delay_ms:	
  3750                           ;psect for function _delay_ms
  3751                           
  3752     03E8                     l1242:	
  3753                           ;incstack = 0
  3754                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3755                           
  3756                           
  3757                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3758     03E8  3000               	movlw	0
  3759     03E9  00FD               	movwf	delay_ms@i+3
  3760     03EA  3000               	movlw	0
  3761     03EB  00FC               	movwf	delay_ms@i+2
  3762     03EC  3000               	movlw	0
  3763     03ED  00FB               	movwf	delay_ms@i+1
  3764     03EE  3000               	movlw	0
  3765     03EF  00FA               	movwf	delay_ms@i
  3766     03F0  2BFE               	goto	l1248
  3767     03F1                     l1244:
  3768     03F1  3029               	movlw	41
  3769     03F2  00F2               	movwf	delay_x24o25us@delay
  3770     03F3  3000               	movlw	0
  3771     03F4  00F3               	movwf	delay_x24o25us@delay+1
  3772     03F5  3183  2351  3183   	fcall	_delay_x24o25us
  3773     03F8                     l1246:
  3774     03F8  3001               	movlw	1
  3775     03F9  07FA               	addwf	delay_ms@i,f
  3776     03FA  3000               	movlw	0
  3777     03FB  3DFB               	addwfc	delay_ms@i+1,f
  3778     03FC  3DFC               	addwfc	delay_ms@i+2,f
  3779     03FD  3DFD               	addwfc	delay_ms@i+3,f
  3780     03FE                     l1248:
  3781     03FE  0879               	movf	delay_ms@delay+3,w
  3782     03FF  027D               	subwf	delay_ms@i+3,w
  3783     0400  1D03               	skipz
  3784     0401  2C0C               	goto	u565
  3785     0402  0878               	movf	delay_ms@delay+2,w
  3786     0403  027C               	subwf	delay_ms@i+2,w
  3787     0404  1D03               	skipz
  3788     0405  2C0C               	goto	u565
  3789     0406  0877               	movf	delay_ms@delay+1,w
  3790     0407  027B               	subwf	delay_ms@i+1,w
  3791     0408  1D03               	skipz
  3792     0409  2C0C               	goto	u565
  3793     040A  0876               	movf	delay_ms@delay,w
  3794     040B  027A               	subwf	delay_ms@i,w
  3795     040C                     u565:
  3796     040C  1C03               	skipc
  3797     040D  2C0F               	goto	u561
  3798     040E  2C10               	goto	u560
  3799     040F                     u561:
  3800     040F  2BF1               	goto	l1244
  3801     0410                     u560:
  3802     0410                     l96:
  3803     0410  0008               	return
  3804     0411                     __end_of_delay_ms:
  3805                           
  3806                           	psect	text21
  3807     0351                     __ptext21:	
  3808 ;; *************** function _delay_x24o25us *****************
  3809 ;; Defined at:
  3810 ;;		line 10 in file "program.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  delay           2    2[COMMON] unsigned short 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  i               2    4[COMMON] unsigned short 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, pclath, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3824 ;;      Params:         2       0       0       0       0       0       0
  3825 ;;      Locals:         2       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0
  3827 ;;      Totals:         4       0       0       0       0       0       0
  3828 ;;Total ram usage:        4 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 1
  3831 ;; This function calls:
  3832 ;;		_delay_x1o5us
  3833 ;; This function is called by:
  3834 ;;		_delay_ms
  3835 ;;		_lcd_Initialize
  3836 ;;		_lcd_ClearAll
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840     0351                     _delay_x24o25us:	
  3841                           ;psect for function _delay_x24o25us
  3842                           
  3843     0351                     l1230:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3846                           
  3847                           
  3848                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3849     0351  01F4               	clrf	delay_x24o25us@i
  3850     0352  01F5               	clrf	delay_x24o25us@i+1
  3851     0353  2B5C               	goto	l1236
  3852     0354                     l1232:
  3853     0354  300F               	movlw	15
  3854     0355  3183  231C  3183   	fcall	_delay_x1o5us
  3855     0358                     l1234:
  3856     0358  3001               	movlw	1
  3857     0359  07F4               	addwf	delay_x24o25us@i,f
  3858     035A  3000               	movlw	0
  3859     035B  3DF5               	addwfc	delay_x24o25us@i+1,f
  3860     035C                     l1236:
  3861     035C  0873               	movf	delay_x24o25us@delay+1,w
  3862     035D  0275               	subwf	delay_x24o25us@i+1,w
  3863     035E  1D03               	skipz
  3864     035F  2B62               	goto	u555
  3865     0360  0872               	movf	delay_x24o25us@delay,w
  3866     0361  0274               	subwf	delay_x24o25us@i,w
  3867     0362                     u555:
  3868     0362  1C03               	skipc
  3869     0363  2B65               	goto	u551
  3870     0364  2B66               	goto	u550
  3871     0365                     u551:
  3872     0365  2B54               	goto	l1232
  3873     0366                     u550:
  3874     0366                     l90:
  3875     0366  0008               	return
  3876     0367                     __end_of_delay_x24o25us:
  3877                           
  3878                           	psect	text22
  3879     031C                     __ptext22:	
  3880 ;; *************** function _delay_x1o5us *****************
  3881 ;; Defined at:
  3882 ;;		line 5 in file "program.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  delay           1    wreg     unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  delay           1    0[COMMON] unsigned char 
  3887 ;;  i               1    1[COMMON] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         0       0       0       0       0       0       0
  3898 ;;      Locals:         2       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         2       0       0       0       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_delay_x24o25us
  3907 ;;		_lcd_DelaySetupTime
  3908 ;;		_lcd_DelayPulse
  3909 ;;		_lcd_WriteData
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913     031C                     _delay_x1o5us:	
  3914                           ;psect for function _delay_x1o5us
  3915                           
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  3919                           ;delay_x1o5us@delay stored from wreg
  3920     031C  00F0               	movwf	delay_x1o5us@delay
  3921     031D                     l1198:
  3922                           
  3923                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  3924     031D  01F1               	clrf	delay_x1o5us@i
  3925     031E  2B22               	goto	l1202
  3926     031F                     l82:
  3927     031F  0000               	nop
  3928     0320                     l1200:
  3929     0320  3001               	movlw	1
  3930     0321  07F1               	addwf	delay_x1o5us@i,f
  3931     0322                     l1202:
  3932     0322  0870               	movf	delay_x1o5us@delay,w
  3933     0323  0271               	subwf	delay_x1o5us@i,w
  3934     0324  1C03               	skipc
  3935     0325  2B27               	goto	u471
  3936     0326  2B28               	goto	u470
  3937     0327                     u471:
  3938     0327  2B1F               	goto	l82
  3939     0328                     u470:
  3940     0328                     l84:
  3941     0328  0008               	return
  3942     0329                     __end_of_delay_x1o5us:
  3943     0001                     ___latbits      equ	1
  3944     007E                     btemp           set	126	;btemp
  3945     007E                     wtemp0          set	126
  3946                           
  3947                           	psect	config
  3948                           
  3949                           ;Config register CONFIG1 @ 0x8007
  3950                           ;	Oscillator Selection
  3951                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3952                           ;	Watchdog Timer Enable
  3953                           ;	WDTE = OFF, WDT disabled
  3954                           ;	Power-up Timer Enable
  3955                           ;	PWRTE = OFF, PWRT disabled
  3956                           ;	MCLR Pin Function Select
  3957                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3958                           ;	Flash Program Memory Code Protection
  3959                           ;	CP = OFF, Program memory code protection is disabled
  3960                           ;	Data Memory Code Protection
  3961                           ;	CPD = OFF, Data memory code protection is disabled
  3962                           ;	Brown-out Reset Enable
  3963                           ;	BOREN = OFF, Brown-out Reset disabled
  3964                           ;	Clock Out Enable
  3965                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  3966                           ;	Internal/External Switchover
  3967                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3968                           ;	Fail-Safe Clock Monitor Enable
  3969                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3970     8007                     	org	32775
  3971     8007  01E2               	dw	482
  3972                           
  3973                           ;Config register CONFIG2 @ 0x8008
  3974                           ;	Flash Memory Self-Write Protection
  3975                           ;	WRT = OFF, Write protection off
  3976                           ;	Voltage Regulator Capacitor Enable bit
  3977                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  3978                           ;	PLL Enable
  3979                           ;	PLLEN = ON, 4x PLL enabled
  3980                           ;	Stack Overflow/Underflow Reset Enable
  3981                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3982                           ;	Brown-out Reset Voltage Selection
  3983                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3984                           ;	Low Power Brown-Out Reset Enable Bit
  3985                           ;	LPBOR = 0x1, unprogrammed default
  3986                           ;	In-Circuit Debugger Mode
  3987                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  3988                           ;	Low-Voltage Programming Enable
  3989                           ;	LVP = ON, Low-voltage programming enabled
  3990     8008                     	org	32776
  3991     8008  3FFF               	dw	16383

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 16
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[16]), STR_2(CODE[6]), 
		 -> STR_3(CODE[6]), STR_4(CODE[6]), STR_5(CODE[6]), STR_6(CODE[6]), 
		 -> STR_7(CODE[6]), STR_8(CODE[6]), STR_9(CODE[6]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _programLoop->_delay_ms
    _pb_DelayDebounce->_delay_ms
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Goto->_lcd_PrintCmd
    _lcd_Initialize->_delay_ms
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4563
                           _delay_ms
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          8     8      0    3729
                                             41 BANK0      8     8      0
                           _delay_ms
                           _lcd_Goto
                _lcd_PrintDigitInt32
                    _lcd_PrintString
                     _motor_SetSpeed
                   _pb_DelayDebounce
 ---------------------------------------------------------------------------------
 (2) _pb_DelayDebounce                                     0     0      0     156
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _motor_SetSpeed                                       2     0      2      51
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2117
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintString                                      3     1      2     476
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     527
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     678
                     _lcd_Initialize
                   _motor_Initialize
 ---------------------------------------------------------------------------------
 (2) _motor_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     678
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (4) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (5) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4     156
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (4) _delay_x24o25us                                       4     2      2     102
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (5) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _delay_x24o25us
       _delay_x1o5us
   _programInitialize
     _lcd_Initialize
       _delay_ms
       _delay_x24o25us
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
     _motor_Initialize
   _programLoop
     _delay_ms
     _lcd_Goto
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _labs
       _lcd_PrintChar
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString
         _lcd_PrintChar
       _memset
     _lcd_PrintString
     _motor_SetSpeed
     _pb_DelayDebounce
       _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BIGRAM             480      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     49      49     61.3%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      63      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Oct 14 20:29:13 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071                _lcd_DelaySetupTime 02DE  
                              l82 031F                                l90 0366                                l84 0328  
                              l96 0410                                l99 0478                   ??_lcd_PrintChar 0075  
                             l111 0795                               l130 02E2                               l133 02E7  
                             l142 0304                               l118 07DF                               l127 031B  
                             l136 02F9                               l145 0443                               l410 0513  
                             l139 0500                               l156 03C8                               l420 058B  
                             l165 0394                               l159 030F                               l192 037D  
                             l177 05B5                               l371 033B                               l195 02EE  
                             l189 065F                               l814 03AB                               l808 0350  
                             l960 0373                               l952 0367                               l970 0378  
                             l962 0374                               l954 0369                               l972 0379  
                             l964 0375                               l956 0371                               l974 037B  
                             l966 0376                               l958 0372                               l968 0377  
                             u600 032F                               u505 049D                               u601 032E  
                             u610 033A                               u515 04AD                               u611 0339  
                             u700 0573                               u620 0506                               u525 04C1  
                             u701 0572                               u621 0505                               u470 0328  
                             u550 0366                               u710 0578                               u630 0517  
                             u471 0327                               u551 0365                               u535 04D2  
                             u711 0577                               u631 0516                               u560 0410  
                             u640 0534                               u720 05AC                               u800 06B2  
                             u561 040F                               u545 04E1                               u641 0533  
                             u721 05AB                               u801 06B1                               u570 0394  
                             u730 05B1                               u810 06C5                               u555 0362  
                             u571 0393                               u731 05B0                               u811 06C4  
                             u660 0544                               u580 03AB                               u740 05D0  
                             u820 070A                               u565 040C                               u485 047D  
                             u661 0543                               u581 03AA                               u741 05CF  
                             u821 0709                               u590 0340                               u750 0613  
                             u830 0720                               u495 048E                               u655 0538  
                             u591 033F                               u751 0612                               u831 071F  
                             u680 055D                               u760 061D                               u840 076C  
                             u681 055C                               u761 061C                               u841 076B  
                             u770 063E                               u850 0783                               u675 0545  
                             u771 063D                               u851 0782                               u780 0647  
                             u860 079A                               u685 0559                               u781 0646  
                             u861 0799                               u870 07B6                               u790 0696  
                             u695 0567                               u775 063A                               u871 07B5  
                             u791 0695                               u880 07CD                               u881 07CC  
                             u890 07E4                               u891 07E3               ?_lcd_DelaySetupTime 0070  
                             wreg 0009               _lcd_PrintDigitInt32 058C                              l1200 0320  
                            l1202 0322                              l1210 02F4                              l1212 02DE  
                            l1204 02E3                              l1220 04CF                              l1300 0522  
                            l1230 0351                              l1206 02EF                              l1222 04DE  
                            l1214 047A                              l1310 0540                              l1302 0524  
                            l1232 0354                              l1208 02F1                              l1224 04EE  
                            l1216 04BB                              l1320 0566                              l1312 0544  
                            l1304 052C                              l1240 0308                              l1234 0358  
                            l1242 03E8                              l1226 04F9                              l1218 04BE  
                            l1322 056D                              l1314 054B                              l1306 0534  
                            l1250 037E                              l1410 0658                              l1402 0648  
                            l1236 035C                              l1244 03F1                              l1228 04FC  
                            l1260 02FD                              l1332 0411                              l1340 03AD  
                            l1316 055D                              l1308 0537                              l1324 0573  
                            l1252 037F                              l1404 0653                              l1412 0310  
                            l1500 07D5                              l1420 0669                              l1246 03F8  
                            l1414 0444                              l1342 03AE                              l1350 03C0  
                            l1326 0578                              l1318 0565                              l1270 033C  
                            l1238 0306                              l1254 0387                              l1262 0395  
                            l1406 0655                              l1334 02E8                              l1502 07DD  
                            l1430 0691                              l1422 066F                              l1510 03C9  
                            l1248 03FE                              l1416 0472                              l1344 03B4  
                            l1328 0583                              l1280 032B                              l1272 0340  
                            l1256 038B                              l1264 0398                              l1360 05AC  
                            l1352 058C                              l1336 02EB                              l1504 07E4  
                            l1440 06C5                              l1432 0696                              l1424 0674  
                            l1512 03E2                              l1258 02FB                              l1346 03BA  
                            l1282 032F                              l1274 0341                              l1266 039D  
                            l1370 05DD                              l1362 05B1                              l1354 058F  
                            l1338 02ED                              l1506 07F1                              l1450 06F3  
                            l1442 06CE                              l1434 06A3                              l1426 067B  
                            l1418 0660                              l1292 0501                              l1284 0331  
                            l1268 039F                              l1380 0613                              l1372 05F9  
                            l1364 05CB                              l1356 059B                              l1508 07F5  
                            l1460 0720                              l1452 06FA                              l1444 06D3  
                            l1436 06B2                              l1428 0680                              l1198 031D  
                            l1294 0502                              l1286 0333                              l1278 032A  
                            l1390 0626                              l1382 0615                              l1374 0602  
                            l1366 05D0                              l1358 05A7                              l1470 0755  
                            l1462 0730                              l1446 06E2                              l1438 06BB  
                            l1454 0705                              l1296 0506                              l1288 033A  
                            l1384 0617                              l1392 0629                              l1376 0609  
                            l1368 05D4                              l1480 0783                              l1472 075C  
                            l1464 0735                              l1456 070A                              l1448 06ED  
                            l1298 0517                              l1394 063E                              l1386 061D  
                            l1378 060B                              l1482 078B                              l1490 07AB  
                            l1466 0744                              l1458 0717                              l1474 0767  
                            l1396 0641                              l1388 0622                              l1492 07B1  
                            l1484 0793                              l1476 076C                              l1468 074F  
                            l1398 0642                              l1494 07B6                              l1486 079A  
                            l1478 0779                              l1496 07C3                              l1488 07A7  
                            l1498 07CD                              STR_1 0800                              STR_2 0816  
                            STR_3 0810                              STR_4 081C                              STR_5 0810  
                            STR_6 0822                              STR_7 0810                              STR_8 0828  
                            STR_9 0810                 ?_pb_DelayDebounce 0070                   ??_lcd_WriteData 0072  
                            _labs 033C                              _main 03C9                ??_pb_DelayDebounce 007E  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E              ??_lcd_DelaySetupTime 0072                              start 0002  
            ?_lcd_PrintDigitInt32 0020                 ___bmul@multiplier 0072              __end_of_delay_x1o5us 0329  
               ??_lcd_PrintString 0078                   __end_of___aldiv 058C                             ?_labs 0070  
                           ?_main 0070                             labs@a 0070               delay_x24o25us@delay 0072  
                           status 0003                             wtemp0 007E             ??_lcd_PrintDigitInt32 0027  
                 __initialization 07FD                      __end_of_labs 0351                      __end_of_main 03E8  
                          ??_labs 0074                            ??_main 007E          lcd_PrintDigitInt32@tempC 0045  
        lcd_PrintDigitInt32@tempN 0041              __end_of_lcd_PrintCmd 0305                  __end_of_delay_ms 0411  
               delay_x1o5us@delay 0070                  __end_of_lcd_Goto 03C9                            ___bmul 0329  
                       ??___aldiv 0078                            _memset 0395                    _delay_x24o25us 0351  
           programLoop@motorSpeed 004D            lcd_PrintChar@character 0075           __end_of__initialization 07FD  
   lcd_PrintDigitInt32@numberChar 0036                      ?_programLoop 0070                  _motor_Initialize 0367  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070               lcd_PrintCmd@command 0075  
          __end_of_delay_x24o25us 0367     lcd_PrintDigitInt32@totalDigit 0047                      _delay_x1o5us 031C  
               _programInitialize 0444                   _lcd_PrintString 037E                        __pmaintext 03C9  
              ?_programInitialize 0070                           ?___bmul 0070                        _lcd_EPulse 02EF  
                 ?_delay_x24o25us 0072                           ?_memset 0070               ??_programInitialize 007E  
           __end_of_lcd_PrintChar 0310                         ?_delay_ms 0076                         ?_lcd_Goto 0076  
       __end_of_programInitialize 0479             __end_of_lcd_WriteData 0501             lcd_PrintDigitInt32@i1 0048  
           lcd_PrintDigitInt32@i2 0046                           ___aldiv 0501                      _lcd_PrintCmd 02FA  
                         __ptext1 0660                           __ptext2 0310                           __ptext3 02E8  
                         __ptext4 058C                           __ptext5 0395                           __ptext6 037E  
                         __ptext7 0305                           __ptext8 033C                           __ptext9 0329  
                ___aldiv@dividend 0074                        ??_delay_ms 007A                        ??_lcd_Goto 0077  
            end_of_initialization 07FD           __end_of_lcd_PrintString 0395        lcd_PrintDigitInt32@noDigit 0024  
     __end_of_lcd_PrintDigitInt32 0660                           memset@c 0071                           memset@n 0073  
                         memset@p 0075                  ___aldiv@quotient 007A                       ?_lcd_EPulse 0070  
                       _PORTAbits 000C          __end_of_motor_Initialize 037E                 motor_SetSpeed@pwm 0070  
                       _TRISAbits 008C                         _TRISBbits 008D                         _TRISCbits 008E  
                  _lcd_DelayPulse 02E3                     delay_x1o5us@i 0071                     _PSMC1STR0bits 082E  
                _pb_DelayDebounce 0310                    __end_of___bmul 033C                     delay_ms@delay 0076  
                  __end_of_memset 03AC            __end_of_lcd_DelayPulse 02E8               start_initialization 07FD  
                  _motor_SetSpeed 02E8                  ?_lcd_PrintString 0076  lcd_PrintDigitInt32@numberRevChar 002B  
                  _lcd_Initialize 0411                  ??_delay_x24o25us 0074                          ??___bmul 0071  
                        ??_memset 0075                        memset@dest 0070                   ?_lcd_DelayPulse 0070  
                       ___latbits 0001                     __pcstackBANK0 0020            __end_of_motor_SetSpeed 02EF  
          __end_of_lcd_Initialize 0444                          ?___aldiv 0070                   ?_motor_SetSpeed 0070  
                 ?_lcd_Initialize 0070                   ___aldiv@divisor 0070        __end_of_lcd_DelaySetupTime 02E3  
                 ___aldiv@counter 0078                          _LATBbits 010D                          _LATCbits 010E  
                       delay_ms@i 007A                          _PSMC1DCH 0824                          _PSMC1DCL 0823  
                        _PSMC1PHH 0822                          _PSMC1PHL 0821                          _PSMC1PRH 0826  
                        _PSMC1PRL 0825                      ??_lcd_EPulse 0072                         lcd_Goto@x 0076  
                       lcd_Goto@y 0077                      _PSMC1DCSbits 081B                 lcd_WriteData@data 0074  
                    _PSMC1CLKbits 0814                      _PSMC1CONbits 0811                      _PSMC1OENbits 0815  
                    _PSMC1PHSbits 081A                      _PSMC1POLbits 0816                 ?_motor_Initialize 0070  
                    _PSMC1PRSbits 081C                ??_motor_Initialize 0070          __end_of_pb_DelayDebounce 031C  
              __end_of_lcd_EPulse 02FA                     ??_programLoop 0049                        _ANSELAbits 018C  
                      _ANSELBbits 018D                     _lcd_PrintChar 0305                          _delay_ms 03E8  
                        __ptext10 0501                          __ptext11 03AC                          __ptext20 03E8  
                        __ptext12 0444                          __ptext21 0351                          __ptext13 0367  
                        __ptext22 031C                          __ptext14 0411                          __ptext15 02FA  
                        __ptext16 0479                          __ptext17 02EF                          __ptext18 02E3  
                        __ptext19 02DE                          _lcd_Goto 03AC                     ?_delay_x1o5us 0070  
                   _lcd_WriteData 0479               __end_of_programLoop 07FD                  ??_lcd_DelayPulse 0072  
                  ?_lcd_PrintChar 0070                    ??_delay_x1o5us 0070                    ?_lcd_WriteData 0070  
       lcd_PrintDigitInt32@enSign 0025         lcd_PrintDigitInt32@enZero 0026         lcd_PrintDigitInt32@number 0020  
                 delay_x24o25us@i 0074                     ?_lcd_PrintCmd 0070                     __pstringtext1 0800  
                   __pstringtext2 0810                     __pstringtext3 0816                     __pstringtext4 081C  
                   __pstringtext5 0822                     __pstringtext6 0828                     __pstringtext7 0000  
                ??_motor_SetSpeed 0072                      ___aldiv@sign 0079                  ??_lcd_Initialize 007E  
           lcd_PrintString@string 0076                       _programLoop 0660  
